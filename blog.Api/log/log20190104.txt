2019-01-04 08:28:36.065 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:28:36.838 +08:00 [INF] Executed DbCommand (70ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 08:28:36.941 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 08:28:37.018 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 08:29:40.876 +08:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:5001/api/post/49 application/json 177
2019-01-04 08:29:41.044 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2019-01-04 08:29:41.107 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2019-01-04 08:29:41.344 +08:00 [INF] Route matched with {action = "PartiallyUpdateCityForCountry", controller = "Post"}. Executing action blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api)
2019-01-04 08:29:41.766 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api) with arguments (["49","Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1[blog.Infrastructure.ViewModels.PostViewModel]"]) - Validation state: "Valid"
2019-01-04 08:30:10.248 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:30:10.817 +08:00 [INF] Executed DbCommand (253ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
WHERE `p`.`Id` = @__id_0
ORDER BY `p`.`Id`
LIMIT 1
2019-01-04 08:30:11.016 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        WHERE `p0`.`Id` = @__id_0
        ORDER BY `p0`.`Id`
        LIMIT 1
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2019-01-04 08:30:43.342 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 61565.755600000004ms.
2019-01-04 08:30:43.360 +08:00 [INF] Executing ObjectResult, writing value of type 'blog.Core.Entities.Post'.
2019-01-04 08:30:43.405 +08:00 [INF] Executed action blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api) in 62055.7638ms
2019-01-04 08:30:43.418 +08:00 [INF] Request finished in 62541.2329ms 200 application/json; charset=utf-8
2019-01-04 08:33:41.518 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:33:42.096 +08:00 [INF] Executed DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 08:33:42.170 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 08:33:42.236 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 08:34:02.007 +08:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:5001/api/post/49 application/json-patch+json 177
2019-01-04 08:34:02.313 +08:00 [INF] Route matched with {action = "PartiallyUpdateCityForCountry", controller = "Post"}. Executing action blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api)
2019-01-04 08:34:02.724 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api) with arguments (["49","Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1[blog.Infrastructure.ViewModels.PostViewModel]"]) - Validation state: "Valid"
2019-01-04 08:34:13.915 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:34:14.204 +08:00 [INF] Executed DbCommand (27ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
WHERE `p`.`Id` = @__id_0
ORDER BY `p`.`Id`
LIMIT 1
2019-01-04 08:34:14.344 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        WHERE `p0`.`Id` = @__id_0
        ORDER BY `p0`.`Id`
        LIMIT 1
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2019-01-04 08:34:32.690 +08:00 [INF] Executed DbCommand (47ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
UPDATE `Posts` SET `AuthorId` = @p0, `Body` = @p1, `CreateTime` = @p2, `LastModify` = @p3, `Title` = @p4
WHERE `Id` = @p5;
SELECT ROW_COUNT();
2019-01-04 08:34:36.233 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 33499.5647ms.
2019-01-04 08:34:36.249 +08:00 [INF] Executing ObjectResult, writing value of type 'blog.Core.Entities.Post'.
2019-01-04 08:34:41.950 +08:00 [INF] Executed action blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api) in 39633.069200000005ms
2019-01-04 08:34:41.963 +08:00 [INF] Request finished in 39955.6339ms 200 application/json; charset=utf-8
2019-01-04 08:36:00.389 +08:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:5001/api/post/49 application/json 177
2019-01-04 08:36:00.392 +08:00 [INF] Route matched with {action = "PartiallyUpdateCityForCountry", controller = "Post"}. Executing action blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api)
2019-01-04 08:36:00.453 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api) with arguments (["49","Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1[blog.Infrastructure.ViewModels.PostViewModel]"]) - Validation state: "Valid"
2019-01-04 08:36:03.639 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:36:03.677 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
WHERE `p`.`Id` = @__id_0
ORDER BY `p`.`Id`
LIMIT 1
2019-01-04 08:36:03.737 +08:00 [INF] Executed DbCommand (52ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        WHERE `p0`.`Id` = @__id_0
        ORDER BY `p0`.`Id`
        LIMIT 1
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2019-01-04 08:36:04.010 +08:00 [INF] Executed DbCommand (145ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
UPDATE `Posts` SET `AuthorId` = @p0, `Body` = @p1, `CreateTime` = @p2, `LastModify` = @p3, `Title` = @p4
WHERE `Id` = @p5;
SELECT ROW_COUNT();
2019-01-04 08:36:04.013 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3560.32ms.
2019-01-04 08:36:04.014 +08:00 [INF] Executing ObjectResult, writing value of type 'blog.Core.Entities.Post'.
2019-01-04 08:36:04.015 +08:00 [INF] Executed action blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api) in 3623.415ms
2019-01-04 08:36:04.016 +08:00 [INF] Request finished in 3627.4268ms 200 application/json; charset=utf-8
2019-01-04 08:36:29.603 +08:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:5001/api/post/49 application/json 177
2019-01-04 08:36:29.604 +08:00 [INF] Route matched with {action = "PartiallyUpdateCityForCountry", controller = "Post"}. Executing action blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api)
2019-01-04 08:36:29.606 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api) with arguments (["49","Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1[blog.Infrastructure.ViewModels.PostViewModel]"]) - Validation state: "Valid"
2019-01-04 08:36:33.085 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:36:33.251 +08:00 [INF] Executed DbCommand (74ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
WHERE `p`.`Id` = @__id_0
ORDER BY `p`.`Id`
LIMIT 1
2019-01-04 08:36:33.351 +08:00 [INF] Executed DbCommand (28ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        WHERE `p0`.`Id` = @__id_0
        ORDER BY `p0`.`Id`
        LIMIT 1
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2019-01-04 08:36:33.417 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
UPDATE `Posts` SET `AuthorId` = @p0, `Body` = @p1, `CreateTime` = @p2, `LastModify` = @p3, `Title` = @p4
WHERE `Id` = @p5;
SELECT ROW_COUNT();
2019-01-04 08:36:33.419 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3813.3747000000003ms.
2019-01-04 08:36:33.419 +08:00 [INF] Executing ObjectResult, writing value of type 'blog.Core.Entities.Post'.
2019-01-04 08:36:33.420 +08:00 [INF] Executed action blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api) in 3815.288ms
2019-01-04 08:36:33.420 +08:00 [INF] Request finished in 3817.1051ms 200 application/json; charset=utf-8
2019-01-04 08:37:00.390 +08:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:5001/api/post/49 application/json 177
2019-01-04 08:37:00.391 +08:00 [INF] Route matched with {action = "PartiallyUpdateCityForCountry", controller = "Post"}. Executing action blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api)
2019-01-04 08:37:00.393 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api) with arguments (["49","Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1[blog.Infrastructure.ViewModels.PostViewModel]"]) - Validation state: "Valid"
2019-01-04 08:37:06.598 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:37:07.046 +08:00 [INF] Executed DbCommand (317ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
WHERE `p`.`Id` = @__id_0
ORDER BY `p`.`Id`
LIMIT 1
2019-01-04 08:37:07.239 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        WHERE `p0`.`Id` = @__id_0
        ORDER BY `p0`.`Id`
        LIMIT 1
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2019-01-04 08:38:56.732 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:38:57.328 +08:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 08:38:57.395 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 08:38:57.458 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 08:38:58.661 +08:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:5001/api/post/49 application/json 177
2019-01-04 08:38:58.935 +08:00 [INF] Route matched with {action = "PartiallyUpdateCityForCountry", controller = "Post"}. Executing action blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api)
2019-01-04 08:38:59.365 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api) with arguments (["49","Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1[blog.Infrastructure.ViewModels.PostViewModel]"]) - Validation state: "Valid"
2019-01-04 08:38:59.379 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:38:59.669 +08:00 [INF] Executed DbCommand (27ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
WHERE `p`.`Id` = @__id_0
ORDER BY `p`.`Id`
LIMIT 1
2019-01-04 08:38:59.807 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        WHERE `p0`.`Id` = @__id_0
        ORDER BY `p0`.`Id`
        LIMIT 1
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2019-01-04 08:38:59.847 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 472.79760000000005ms.
2019-01-04 08:38:59.856 +08:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2019-01-04 08:38:59.865 +08:00 [INF] Executed action blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api) in 927.10700000000008ms
2019-01-04 08:38:59.871 +08:00 [INF] Request finished in 1209.8837ms 200 text/plain; charset=utf-8
2019-01-04 08:39:42.404 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:39:43.039 +08:00 [INF] Executed DbCommand (54ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 08:39:43.114 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 08:39:43.190 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 08:39:44.174 +08:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:5001/api/post/49 application/json 177
2019-01-04 08:39:44.484 +08:00 [INF] Route matched with {action = "PartiallyUpdateCityForCountry", controller = "Post"}. Executing action blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api)
2019-01-04 08:39:44.926 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api) with arguments (["49","Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1[blog.Infrastructure.ViewModels.PostViewModel]"]) - Validation state: "Valid"
2019-01-04 08:39:44.942 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:39:45.245 +08:00 [INF] Executed DbCommand (27ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
WHERE `p`.`Id` = @__id_0
ORDER BY `p`.`Id`
LIMIT 1
2019-01-04 08:39:45.383 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        WHERE `p0`.`Id` = @__id_0
        ORDER BY `p0`.`Id`
        LIMIT 1
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2019-01-04 08:39:46.354 +08:00 [INF] Executed action blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api) in 1867.384ms
2019-01-04 08:39:46.356 +08:00 [ERR] An unhandled exception has occurred while executing the request.
AutoMapper.AutoMapperConfigurationException: 
Unmapped members were found. Review the types and members below.
Add a custom mapping expression, ignore, add a custom resolver, or modify the source/destination type
For no matching constructor, add a no-arg ctor, add optional arguments, or map all of the constructor parameters
===============================================================================================================================================================================================================================
AutoMapper created this type map for you, but your types cannot be mapped using the current configuration.
JsonPatchDocument`1 -> PostViewModel (Destination member list)
Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> blog.Infrastructure.ViewModels.PostViewModel (Destination member list)

Unmapped properties:
Title
Body
CreateTime
LastModify
AuthorId
AuthorName
Tags

   at AutoMapper.ConfigurationValidator.AssertConfigurationIsValid(IEnumerable`1 typeMaps) in C:\projects\automapper\src\AutoMapper\ConfigurationValidator.cs:line 48
   at lambda_method(Closure , JsonPatchDocument`1 , PostViewModel , ResolutionContext )
   at lambda_method(Closure , Object , Object , ResolutionContext )
   at AutoMapper.Mapper.AutoMapper.IMapper.Map[TDestination](Object source) in C:\projects\automapper\src\AutoMapper\Mapper.cs:line 211
   at blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry(Int32 id, JsonPatchDocument`1 patchDoc) in /Users/zhexuanzhou/Projects/blog_with_Identity/blog.Api/Controllers/PostController.cs:line 87
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-01-04 08:39:46.495 +08:00 [INF] Request finished in 2321.6745ms 500 text/html; charset=utf-8
2019-01-04 08:44:42.998 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:44:43.705 +08:00 [INF] Executed DbCommand (55ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 08:44:43.804 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 08:44:43.899 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 08:44:45.586 +08:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:5001/api/post/49 application/json 177
2019-01-04 08:44:45.877 +08:00 [INF] Route matched with {action = "PartiallyUpdateCityForCountry", controller = "Post"}. Executing action blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api)
2019-01-04 08:44:46.292 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api) with arguments (["49","Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1[blog.Infrastructure.ViewModels.PostUpdateViewModel]"]) - Validation state: "Valid"
2019-01-04 08:44:46.305 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:44:46.611 +08:00 [INF] Executed DbCommand (27ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
WHERE `p`.`Id` = @__id_0
ORDER BY `p`.`Id`
LIMIT 1
2019-01-04 08:44:46.749 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        WHERE `p0`.`Id` = @__id_0
        ORDER BY `p0`.`Id`
        LIMIT 1
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2019-01-04 08:44:47.707 +08:00 [INF] Executed action blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api) in 1826.4354ms
2019-01-04 08:44:47.708 +08:00 [ERR] An unhandled exception has occurred while executing the request.
AutoMapper.AutoMapperConfigurationException: 
Unmapped members were found. Review the types and members below.
Add a custom mapping expression, ignore, add a custom resolver, or modify the source/destination type
For no matching constructor, add a no-arg ctor, add optional arguments, or map all of the constructor parameters
==============================================================================
AutoMapper created this type map for you, but your types cannot be mapped using the current configuration.
Post -> PostUpdateViewModel (Destination member list)
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostUpdateViewModel (Destination member list)

Unmapped properties:
Tags

   at AutoMapper.ConfigurationValidator.AssertConfigurationIsValid(IEnumerable`1 typeMaps) in C:\projects\automapper\src\AutoMapper\ConfigurationValidator.cs:line 48
   at lambda_method(Closure , Post , PostUpdateViewModel , ResolutionContext )
   at lambda_method(Closure , Object , Object , ResolutionContext )
   at AutoMapper.Mapper.AutoMapper.IMapper.Map[TDestination](Object source) in C:\projects\automapper\src\AutoMapper\Mapper.cs:line 211
   at blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry(Int32 id, JsonPatchDocument`1 patchDoc) in /Users/zhexuanzhou/Projects/blog_with_Identity/blog.Api/Controllers/PostController.cs:line 87
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-01-04 08:44:47.848 +08:00 [INF] Request finished in 2261.6558ms 500 text/html; charset=utf-8
2019-01-04 08:47:30.548 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:47:31.146 +08:00 [INF] Executed DbCommand (60ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 08:47:31.238 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 08:47:31.322 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 08:47:32.181 +08:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:5001/api/post/49 application/json 177
2019-01-04 08:47:32.488 +08:00 [INF] Route matched with {action = "PartiallyUpdateCityForCountry", controller = "Post"}. Executing action blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api)
2019-01-04 08:47:32.908 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api) with arguments (["49","Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1[blog.Infrastructure.ViewModels.PostUpdateViewModel]"]) - Validation state: "Valid"
2019-01-04 08:47:32.921 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:47:33.216 +08:00 [INF] Executed DbCommand (28ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
WHERE `p`.`Id` = @__id_0
ORDER BY `p`.`Id`
LIMIT 1
2019-01-04 08:47:33.355 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        WHERE `p0`.`Id` = @__id_0
        ORDER BY `p0`.`Id`
        LIMIT 1
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2019-01-04 08:47:33.389 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 472.01570000000004ms.
2019-01-04 08:47:33.399 +08:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2019-01-04 08:47:33.408 +08:00 [INF] Executed action blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api) in 916.8164ms
2019-01-04 08:47:33.414 +08:00 [INF] Request finished in 1233.2989ms 200 text/plain; charset=utf-8
2019-01-04 08:48:00.567 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:48:01.105 +08:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 08:48:01.181 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 08:48:01.250 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 08:48:14.068 +08:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:5001/api/post/49 application/json 177
2019-01-04 08:48:14.372 +08:00 [INF] Route matched with {action = "PartiallyUpdateCityForCountry", controller = "Post"}. Executing action blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api)
2019-01-04 08:48:14.797 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api) with arguments (["49","Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1[blog.Infrastructure.ViewModels.PostUpdateViewModel]"]) - Validation state: "Valid"
2019-01-04 08:48:14.811 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:48:15.112 +08:00 [INF] Executed DbCommand (28ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
WHERE `p`.`Id` = @__id_0
ORDER BY `p`.`Id`
LIMIT 1
2019-01-04 08:48:15.259 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        WHERE `p0`.`Id` = @__id_0
        ORDER BY `p0`.`Id`
        LIMIT 1
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2019-01-04 08:48:15.528 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
UPDATE `Posts` SET `AuthorId` = @p0, `Body` = @p1, `CreateTime` = @p2, `LastModify` = @p3, `Title` = @p4
WHERE `Id` = @p5;
SELECT ROW_COUNT();
2019-01-04 08:48:15.558 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 751.52280000000007ms.
2019-01-04 08:48:15.574 +08:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2019-01-04 08:48:15.587 +08:00 [INF] Executed action blog.Api.Controllers.PostController.PartiallyUpdateCityForCountry (blog.Api) in 1210.7276000000002ms
2019-01-04 08:48:15.598 +08:00 [INF] Request finished in 1530.7613ms 200 text/plain; charset=utf-8
2019-01-04 08:53:38.518 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post/ application/json 177
2019-01-04 08:53:38.535 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 08:53:38.548 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2019-01-04 08:53:38.553 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:53:38.560 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 08:53:38.563 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 08:53:38.671 +08:00 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 08:53:38.691 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2019-01-04 08:53:38.901 +08:00 [INF] Executed DbCommand (52ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 08:53:38.925 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2019-01-04 08:53:38.994 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 446.0272ms.
2019-01-04 08:53:38.995 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 08:53:59.725 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 177
2019-01-04 08:53:59.725 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 08:53:59.726 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2019-01-04 08:53:59.727 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:53:59.885 +08:00 [INF] Executed DbCommand (29ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 08:53:59.969 +08:00 [INF] Executed DbCommand (53ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 08:53:59.977 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2019-01-04 08:54:00.011 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 284.32300000000004ms.
2019-01-04 08:54:00.011 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 08:54:22.072 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:54:22.703 +08:00 [INF] Executed DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 08:54:22.770 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 08:54:22.840 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 08:54:41.990 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 
2019-01-04 08:54:42.373 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 08:54:42.858 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2019-01-04 08:54:42.879 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:54:42.899 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 08:54:42.903 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 08:54:42.988 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 08:54:43.007 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2019-01-04 08:54:43.321 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 08:54:43.473 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2019-01-04 08:54:43.583 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 714.513ms.
2019-01-04 08:54:43.597 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 08:55:39.926 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post/GetPosts application/json 
2019-01-04 08:55:39.934 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 08:55:39.942 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["0",""]) - Validation state: "Invalid"
2019-01-04 08:55:39.947 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:55:40.076 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
WHERE `p`.`Id` = @__id_0
ORDER BY `p`.`Id`
LIMIT 1
2019-01-04 08:55:40.132 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.NotFoundResult in 189.6885ms.
2019-01-04 08:55:40.138 +08:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 404
2019-01-04 08:55:40.145 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 207.1938ms
2019-01-04 08:55:40.157 +08:00 [INF] Request finished in 230.6088ms 404 
2019-01-04 08:55:45.857 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 
2019-01-04 08:55:45.857 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 08:55:45.858 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2019-01-04 08:55:51.180 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:55:51.267 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 08:55:51.558 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 08:55:51.613 +08:00 [INF] Executed DbCommand (43ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2019-01-04 08:55:57.429 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 11570.250600000001ms.
2019-01-04 08:55:57.430 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 08:57:08.912 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 
2019-01-04 08:57:08.912 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 08:57:08.913 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2019-01-04 08:57:12.832 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:57:12.913 +08:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 08:57:13.297 +08:00 [INF] Executed DbCommand (26ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 08:57:13.303 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2019-01-04 08:58:06.610 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 57695.442800000004ms.
2019-01-04 08:58:06.610 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 08:59:21.867 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post  
2019-01-04 08:59:21.867 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 08:59:21.868 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8"]) - Validation state: "Valid"
2019-01-04 08:59:24.849 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 08:59:24.960 +08:00 [INF] Executed DbCommand (54ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 08:59:25.087 +08:00 [INF] Executed DbCommand (45ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 08:59:25.171 +08:00 [INF] Executed DbCommand (83ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2019-01-04 08:59:25.176 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3307.9058ms.
2019-01-04 08:59:25.177 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 09:01:31.291 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 09:01:31.930 +08:00 [INF] Executed DbCommand (65ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 09:01:31.993 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 09:01:32.137 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 09:01:34.921 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post  
2019-01-04 09:01:35.274 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 09:01:35.691 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8"]) - Validation state: "Valid"
2019-01-04 09:01:39.662 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 09:01:39.684 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 09:01:39.769 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 09:01:39.788 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2019-01-04 09:01:40.068 +08:00 [INF] Executed DbCommand (41ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 09:01:40.152 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT `p0`.`Id`
    FROM `Posts` AS `p0`
    ORDER BY `p0`.`Id`
    LIMIT @__p_1 OFFSET @__p_0
) AS `t` ON `p.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2019-01-04 09:01:40.241 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4541.093ms.
2019-01-04 09:01:40.257 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 09:02:20.371 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 45092.7513ms
2019-01-04 09:02:20.380 +08:00 [INF] Request finished in 45458.2884ms 200 application/json; charset=utf-8
2019-01-04 09:03:03.345 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post  
2019-01-04 09:03:03.347 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 09:03:03.350 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8"]) - Validation state: "Valid"
2019-01-04 09:03:50.731 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 09:03:50.783 +08:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 09:03:51.142 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 09:03:51.169 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT `p0`.`Id`
    FROM `Posts` AS `p0`
    ORDER BY `p0`.`Id`
    LIMIT @__p_1 OFFSET @__p_0
) AS `t` ON `p.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2019-01-04 09:04:34.508 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 91154.3622ms.
2019-01-04 09:04:34.513 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 09:05:00.279 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 116927.86600000001ms
2019-01-04 09:05:00.280 +08:00 [INF] Request finished in 116931.881ms 200 application/json; charset=utf-8
2019-01-04 13:18:02.341 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:18:02.967 +08:00 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:18:03.034 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:18:03.104 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 13:18:05.114 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post  
2019-01-04 13:18:05.438 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 13:18:05.942 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8"]) - Validation state: "Valid"
2019-01-04 13:18:09.950 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:18:09.967 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 13:18:10.095 +08:00 [INF] Executed DbCommand (55ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 13:18:10.189 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2019-01-04 13:18:10.450 +08:00 [INF] Executed DbCommand (29ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 13:18:10.631 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT `p0`.`Id`
    FROM `Posts` AS `p0`
    ORDER BY `p0`.`Id`
    LIMIT @__p_1 OFFSET @__p_0
) AS `t` ON `p.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2019-01-04 13:18:10.802 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4851.4827000000005ms.
2019-01-04 13:18:10.824 +08:00 [INF] Executing ObjectResult, writing value of type 'blog.Core.Entities.PaginatedList`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 13:18:22.494 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 17054.2287ms
2019-01-04 13:18:22.502 +08:00 [INF] Request finished in 17390.826ms 200 application/json; charset=utf-8
2019-01-04 13:18:44.825 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:18:45.428 +08:00 [INF] Executed DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:18:45.575 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:18:45.659 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 13:18:47.251 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post  
2019-01-04 13:18:47.566 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 13:18:48.024 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8"]) - Validation state: "Valid"
2019-01-04 13:18:51.864 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:18:51.876 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 13:18:51.954 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 13:18:51.973 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2019-01-04 13:18:52.201 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 13:18:52.277 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT `p0`.`Id`
    FROM `Posts` AS `p0`
    ORDER BY `p0`.`Id`
    LIMIT @__p_1 OFFSET @__p_0
) AS `t` ON `p.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2019-01-04 13:18:52.437 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4395.7694ms.
2019-01-04 13:18:52.492 +08:00 [INF] Executing ObjectResult, writing value of type 'blog.Core.Entities.PaginatedList`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 13:19:10.079 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 22509.3427ms
2019-01-04 13:19:10.087 +08:00 [INF] Request finished in 22836.7956ms 200 application/json; charset=utf-8
2019-01-04 13:20:31.259 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:20:31.952 +08:00 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:20:32.019 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:20:32.090 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 13:20:32.956 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post  
2019-01-04 13:20:33.284 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 13:20:33.695 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8"]) - Validation state: "Valid"
2019-01-04 13:20:37.187 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:20:37.201 +08:00 [WRN] The Include operation for navigation '[p].PostTags' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 13:20:37.293 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 13:20:37.318 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2019-01-04 13:20:37.532 +08:00 [INF] Executed DbCommand (40ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 13:20:37.702 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`
FROM `PostTags` AS `p.PostTags`
INNER JOIN (
    SELECT `p0`.`Id`
    FROM `Posts` AS `p0`
    ORDER BY `p0`.`Id`
    LIMIT @__p_1 OFFSET @__p_0
) AS `t` ON `p.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2019-01-04 13:20:37.744 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4039.5750000000003ms.
2019-01-04 13:20:37.761 +08:00 [INF] Executing ObjectResult, writing value of type 'blog.Core.Entities.PaginatedList`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 13:20:37.855 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 4564.8104ms
2019-01-04 13:20:37.888 +08:00 [INF] Request finished in 4932.5064ms 200 application/json; charset=utf-8
2019-01-04 13:20:39.047 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/favicon.ico  
2019-01-04 13:20:39.051 +08:00 [INF] Request finished in 3.6751ms 404 
2019-01-04 13:21:12.539 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 
2019-01-04 13:21:12.542 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 13:21:12.546 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2019-01-04 13:21:16.509 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:21:16.540 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 13:21:16.695 +08:00 [INF] Executed DbCommand (22ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 13:21:16.720 +08:00 [INF] Executed DbCommand (23ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`
FROM `PostTags` AS `p.PostTags`
INNER JOIN (
    SELECT `p0`.`Id`
    FROM `Posts` AS `p0`
    ORDER BY `p0`.`Id`
    LIMIT @__p_1 OFFSET @__p_0
) AS `t` ON `p.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2019-01-04 13:21:16.726 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4179.7706ms.
2019-01-04 13:21:16.727 +08:00 [INF] Executing ObjectResult, writing value of type 'blog.Core.Entities.PaginatedList`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 13:21:16.728 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 4186.501ms
2019-01-04 13:21:16.729 +08:00 [INF] Request finished in 4240.3946ms 200 application/json; charset=utf-8
2019-01-04 13:21:57.559 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:21:58.234 +08:00 [INF] Executed DbCommand (54ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:21:58.307 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:21:58.375 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 13:21:59.518 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 
2019-01-04 13:21:59.826 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 13:22:00.318 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2019-01-04 13:22:00.338 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:22:00.393 +08:00 [WRN] The Include operation for navigation '[p].PostTags' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 13:22:00.484 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 13:22:00.502 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2019-01-04 13:22:00.824 +08:00 [INF] Executed DbCommand (139ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 13:22:00.933 +08:00 [INF] Executed DbCommand (23ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`
FROM `PostTags` AS `p.PostTags`
INNER JOIN (
    SELECT `p0`.`Id`
    FROM `Posts` AS `p0`
    ORDER BY `p0`.`Id`
    LIMIT @__p_1 OFFSET @__p_0
) AS `t` ON `p.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2019-01-04 13:22:01.026 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 695.1974ms.
2019-01-04 13:22:01.045 +08:00 [INF] Executing ObjectResult, writing value of type 'blog.Core.Entities.PaginatedList`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 13:22:01.127 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1298.4473ms
2019-01-04 13:22:01.137 +08:00 [INF] Request finished in 1620.5068ms 200 application/json; charset=utf-8
2019-01-04 13:22:17.965 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:22:18.590 +08:00 [INF] Executed DbCommand (60ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:22:18.675 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:22:18.742 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 13:22:19.472 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 
2019-01-04 13:22:19.768 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 13:22:20.141 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2019-01-04 13:22:20.154 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:22:20.165 +08:00 [WRN] The Include operation for navigation '[p].PostTags' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 13:22:20.231 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 13:22:20.250 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2019-01-04 13:22:20.487 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 13:22:20.558 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`
FROM `PostTags` AS `p.PostTags`
INNER JOIN (
    SELECT `p0`.`Id`
    FROM `Posts` AS `p0`
    ORDER BY `p0`.`Id`
    LIMIT @__p_1 OFFSET @__p_0
) AS `t` ON `p.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2019-01-04 13:22:20.635 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 484.8677ms.
2019-01-04 13:22:20.651 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 13:22:20.729 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 957.7258ms
2019-01-04 13:22:20.741 +08:00 [INF] Request finished in 1269.6036ms 200 application/json; charset=utf-8
2019-01-04 13:22:55.016 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:22:55.559 +08:00 [INF] Executed DbCommand (53ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:22:55.625 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:22:55.691 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 13:22:57.787 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 
2019-01-04 13:22:58.079 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 13:22:58.445 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2019-01-04 13:22:58.457 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:22:58.468 +08:00 [WRN] The Include operation for navigation '[p].PostTags' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 13:22:58.536 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 13:22:58.554 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2019-01-04 13:22:58.779 +08:00 [INF] Executed DbCommand (62ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 13:22:58.853 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`
FROM `PostTags` AS `p.PostTags`
INNER JOIN (
    SELECT `p0`.`Id`
    FROM `Posts` AS `p0`
    ORDER BY `p0`.`Id`
    LIMIT @__p_1 OFFSET @__p_0
) AS `t` ON `p.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2019-01-04 13:22:59.640 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1557.1683ms
2019-01-04 13:22:59.645 +08:00 [ERR] An unhandled exception has occurred while executing the request.
AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
IEnumerable`1 -> IEnumerable`1
System.Collections.Generic.IEnumerable`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> System.Collections.Generic.IEnumerable`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] ---> AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Type Map configuration:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Destination Member:
Tags
 ---> AutoMapper.AutoMapperConfigurationException: 
Unmapped members were found. Review the types and members below.
Add a custom mapping expression, ignore, add a custom resolver, or modify the source/destination type
For no matching constructor, add a no-arg ctor, add optional arguments, or map all of the constructor parameters
=======================================
AutoMapper created this type map for you, but your types cannot be mapped using the current configuration.
Int32 -> Tag (Destination member list)
System.Int32 -> blog.Core.Entities.Tag (Destination member list)

Unmapped properties:
TagName
PostTags
Id

   at AutoMapper.ConfigurationValidator.AssertConfigurationIsValid(IEnumerable`1 typeMaps) in C:\projects\automapper\src\AutoMapper\ConfigurationValidator.cs:line 48
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   at AutoMapper.Mapper.AutoMapper.IMapper.Map[TSource,TDestination](TSource source) in C:\projects\automapper\src\AutoMapper\Mapper.cs:line 233
   at blog.Api.Controllers.PostController.Get(PostParameters postParameters, String mediaType) in /Users/zhexuanzhou/Projects/blog_with_Identity/blog.Api/Controllers/PostController.cs:line 42
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-01-04 13:22:59.789 +08:00 [INF] Request finished in 2002.7091ms 500 text/html; charset=utf-8
2019-01-04 13:24:45.885 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:24:46.568 +08:00 [INF] Executed DbCommand (67ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:24:46.635 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:24:46.705 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 13:24:47.981 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 
2019-01-04 13:24:48.284 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 13:24:48.667 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2019-01-04 13:24:48.681 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:24:48.692 +08:00 [WRN] The Include operation for navigation '[p].PostTags' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 13:24:48.761 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 13:24:48.783 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2019-01-04 13:24:49.005 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 13:24:49.109 +08:00 [INF] Executed DbCommand (31ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`
FROM `PostTags` AS `p.PostTags`
INNER JOIN (
    SELECT `p0`.`Id`
    FROM `Posts` AS `p0`
    ORDER BY `p0`.`Id`
    LIMIT @__p_1 OFFSET @__p_0
) AS `t` ON `p.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2019-01-04 13:24:49.187 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 510.951ms.
2019-01-04 13:24:49.202 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 13:24:49.276 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 988.7052ms
2019-01-04 13:24:49.286 +08:00 [INF] Request finished in 1305.8264ms 200 application/json; charset=utf-8
2019-01-04 13:32:25.685 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:32:26.404 +08:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:32:26.471 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:32:26.540 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 13:32:27.268 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 
2019-01-04 13:32:27.570 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 13:32:27.954 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2019-01-04 13:32:27.967 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:32:27.979 +08:00 [WRN] The Include operation for navigation '[p].PostTags' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 13:32:28.046 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 13:32:28.065 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2019-01-04 13:32:28.270 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 13:32:28.341 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`
FROM `PostTags` AS `p.PostTags`
INNER JOIN (
    SELECT `p0`.`Id`
    FROM `Posts` AS `p0`
    ORDER BY `p0`.`Id`
    LIMIT @__p_1 OFFSET @__p_0
) AS `t` ON `p.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2019-01-04 13:32:28.447 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 485.08480000000003ms.
2019-01-04 13:32:28.462 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 13:32:28.534 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 961.04230000000007ms
2019-01-04 13:32:28.545 +08:00 [INF] Request finished in 1277.3747ms 200 application/json; charset=utf-8
2019-01-04 13:36:43.532 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:36:44.168 +08:00 [INF] Executed DbCommand (58ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:36:44.252 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:36:44.321 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 13:36:45.712 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 
2019-01-04 13:36:46.010 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 13:36:46.375 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2019-01-04 13:36:46.388 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:36:46.400 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 13:36:46.469 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 13:36:46.487 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2019-01-04 13:36:46.731 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 13:36:46.802 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT `p0`.`Id`
    FROM `Posts` AS `p0`
    ORDER BY `p0`.`Id`
    LIMIT @__p_1 OFFSET @__p_0
) AS `t` ON `p.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2019-01-04 13:36:46.916 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 532.4367ms.
2019-01-04 13:36:46.931 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 13:37:02.800 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 16785.1536ms
2019-01-04 13:37:02.809 +08:00 [INF] Request finished in 17098.3009ms 200 application/json; charset=utf-8
2019-01-04 13:38:58.918 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:38:59.577 +08:00 [INF] Executed DbCommand (69ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:38:59.663 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:38:59.771 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 13:39:00.550 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 
2019-01-04 13:39:00.851 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 13:39:01.250 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2019-01-04 13:39:01.266 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:39:01.281 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 13:39:01.352 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 13:39:01.370 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2019-01-04 13:39:01.663 +08:00 [INF] Executed DbCommand (65ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 13:39:01.735 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT `p0`.`Id`
    FROM `Posts` AS `p0`
    ORDER BY `p0`.`Id`
    LIMIT @__p_1 OFFSET @__p_0
) AS `t` ON `p.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2019-01-04 13:39:01.848 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 588.6268ms.
2019-01-04 13:39:01.863 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 13:39:01.935 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1080.0807ms
2019-01-04 13:39:01.945 +08:00 [INF] Request finished in 1395.8012ms 200 application/json; charset=utf-8
2019-01-04 13:39:42.010 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:39:42.541 +08:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:39:42.607 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:39:42.672 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 13:40:07.496 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 
2019-01-04 13:40:07.792 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 13:40:08.175 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2019-01-04 13:40:08.188 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:40:08.201 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 13:40:08.275 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 13:40:08.294 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2019-01-04 13:40:08.526 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 13:40:08.622 +08:00 [INF] Executed DbCommand (28ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT `p0`.`Id`
    FROM `Posts` AS `p0`
    ORDER BY `p0`.`Id`
    LIMIT @__p_1 OFFSET @__p_0
) AS `t` ON `p.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2019-01-04 13:40:08.733 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 549.7738ms.
2019-01-04 13:40:08.748 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 13:40:08.820 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1025.0834ms
2019-01-04 13:40:08.830 +08:00 [INF] Request finished in 1335.1765ms 200 application/json; charset=utf-8
2019-01-04 13:45:53.063 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:45:53.650 +08:00 [INF] Executed DbCommand (52ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:45:53.728 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:45:53.799 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 13:45:54.792 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 
2019-01-04 13:45:55.070 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 13:45:55.463 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2019-01-04 13:45:55.490 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:45:55.506 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 13:45:55.508 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 13:45:55.572 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 13:45:55.590 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2019-01-04 13:45:55.895 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 13:45:56.038 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2019-01-04 13:45:56.120 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 647.82630000000006ms.
2019-01-04 13:45:56.135 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 13:45:56.204 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1131.2829000000002ms
2019-01-04 13:45:56.214 +08:00 [INF] Request finished in 1422.6629ms 200 application/json; charset=utf-8
2019-01-04 13:48:01.750 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:48:02.385 +08:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:48:02.454 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:48:02.526 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 13:48:03.170 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 
2019-01-04 13:48:03.489 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 13:48:03.912 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2019-01-04 13:48:03.927 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:48:03.942 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 13:48:03.945 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 13:48:04.009 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 13:48:04.028 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2019-01-04 13:48:04.301 +08:00 [INF] Executed DbCommand (43ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 13:48:04.508 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2019-01-04 13:48:04.593 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 671.73070000000007ms.
2019-01-04 13:48:04.608 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 13:48:04.681 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1188.4826ms
2019-01-04 13:48:04.691 +08:00 [INF] Request finished in 1521.8933ms 200 application/json; charset=utf-8
2019-01-04 13:49:14.643 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:49:15.177 +08:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:49:15.243 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:49:15.305 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 13:49:24.493 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 
2019-01-04 13:49:24.775 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2019-01-04 13:49:25.160 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2019-01-04 13:49:25.173 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:49:25.188 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 13:49:25.191 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2019-01-04 13:49:25.257 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2019-01-04 13:49:25.275 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2019-01-04 13:49:25.566 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2019-01-04 13:49:25.716 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2019-01-04 13:49:25.820 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 650.7041ms.
2019-01-04 13:49:25.838 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-01-04 13:49:25.921 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1142.4523000000002ms
2019-01-04 13:49:25.932 +08:00 [INF] Request finished in 1439.9564ms 200 application/json; charset=utf-8
2019-01-04 13:51:16.170 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 13:51:16.710 +08:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:51:16.777 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 13:51:16.844 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 14:01:30.814 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 14:01:31.456 +08:00 [INF] Executed DbCommand (49ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2019-01-04 14:01:31.524 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2019-01-04 14:01:31.597 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2019-01-04 14:01:35.352 +08:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:5001/api/post/49 application/json 0
2019-01-04 14:01:35.652 +08:00 [INF] Route matched with {action = "DeletPost", controller = "Post"}. Executing action blog.Api.Controllers.PostController.DeletPost (blog.Api)
2019-01-04 14:01:36.042 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.DeletPost (blog.Api) with arguments (["49"]) - Validation state: "Valid"
2019-01-04 14:01:36.056 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2019-01-04 14:01:36.339 +08:00 [INF] Executed DbCommand (28ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
WHERE `p`.`Id` = @__id_0
ORDER BY `p`.`Id`
LIMIT 1
2019-01-04 14:01:36.418 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT `p0`.`Id`
    FROM `Posts` AS `p0`
    WHERE `p0`.`Id` = @__id_0
    ORDER BY `p0`.`Id`
    LIMIT 1
) AS `t` ON `p.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2019-01-04 14:01:36.569 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM `Posts`
WHERE `Id` = @p0;
SELECT ROW_COUNT();
2019-01-04 14:01:36.628 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.DeletPost (blog.Api), returned result Microsoft.AspNetCore.Mvc.NoContentResult in 576.971ms.
2019-01-04 14:01:36.642 +08:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 204
2019-01-04 14:01:36.648 +08:00 [INF] Executed action blog.Api.Controllers.PostController.DeletPost (blog.Api) in 992.7213ms
2019-01-04 14:01:36.662 +08:00 [INF] Request finished in 1310.0671ms 204 
