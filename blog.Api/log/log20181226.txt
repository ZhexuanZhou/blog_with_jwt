2018-12-26 08:48:32.262 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 08:48:34.030 +08:00 [INF] Executed DbCommand (122ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 08:48:34.171 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 08:48:34.178 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 08:48:34.186 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 08:48:34.273 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 08:48:37.853 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 08:48:38.017 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 08:48:38.085 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 08:48:38.334 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 08:48:38.752 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 08:48:38.767 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 08:48:38.942 +08:00 [INF] Executed DbCommand (97ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 08:48:38.970 +08:00 [WRN] Query: '(from Post <generated>_2 in DbSet<Post> select [<generated>_2]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 08:48:39.134 +08:00 [INF] Executed DbCommand (64ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 08:48:39.397 +08:00 [INF] Executed DbCommand (46ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 08:48:39.540 +08:00 [INF] Executed DbCommand (25ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 08:48:39.621 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 08:48:39.660 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 897.965ms.
2018-12-26 08:48:39.675 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 08:48:39.713 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1375.4422ms
2018-12-26 08:48:39.722 +08:00 [INF] Request finished in 1870.0986ms 200 application/json; charset=utf-8
2018-12-26 08:48:39.730 +08:00 [INF] Connection id "0HLJAPFFK4S00", Request id "0HLJAPFFK4S00:00000001": the application completed without reading the entire request body.
2018-12-26 08:53:32.822 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 08:53:33.470 +08:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 08:53:33.540 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 08:53:33.546 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 08:53:33.550 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 08:53:33.629 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 08:53:35.837 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 08:53:36.001 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 08:53:36.052 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 08:53:36.299 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 08:53:36.657 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 08:53:36.671 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 08:53:36.742 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 08:53:36.766 +08:00 [WRN] Query: '(from Post <generated>_2 in DbSet<Post> select [<generated>_2]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 08:53:36.899 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 08:53:37.094 +08:00 [INF] Executed DbCommand (27ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 08:53:37.125 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 08:53:37.160 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 08:53:37.167 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 501.55780000000004ms.
2018-12-26 08:53:37.183 +08:00 [INF] Executing ObjectResult, writing value of type 'blog.Core.Entities.PaginatedList`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 08:53:37.224 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 921.99750000000006ms
2018-12-26 08:53:37.228 +08:00 [ERR] An unhandled exception has occurred while executing the request.
Newtonsoft.Json.JsonSerializationException: Self referencing loop detected for property 'post' with type 'blog.Core.Entities.Post'. Path '[0].postTags[0]'.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(JsonWriter writer, Object value, JsonProperty property, JsonContract contract, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(JsonWriter writer, Object value, JsonContainerContract contract, JsonProperty member, JsonProperty property, JsonContract& memberContract, Object& memberValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value)
   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject(TextWriter writer, Object value)
   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-12-26 08:53:37.235 +08:00 [WRN] The response has already started, the error page middleware will not be executed.
2018-12-26 08:53:37.238 +08:00 [ERR] Connection id "0HLJAPI8EFE8A", Request id "0HLJAPI8EFE8A:00000001": An unhandled exception was thrown by the application.
Newtonsoft.Json.JsonSerializationException: Self referencing loop detected for property 'post' with type 'blog.Core.Entities.Post'. Path '[0].postTags[0]'.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(JsonWriter writer, Object value, JsonProperty property, JsonContract contract, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(JsonWriter writer, Object value, JsonContainerContract contract, JsonProperty member, JsonProperty property, JsonContract& memberContract, Object& memberValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value)
   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject(TextWriter writer, Object value)
   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2018-12-26 08:53:37.247 +08:00 [INF] Request finished in 1410.9175ms 200 application/json; charset=utf-8
2018-12-26 08:53:37.255 +08:00 [INF] Connection id "0HLJAPI8EFE8A", Request id "0HLJAPI8EFE8A:00000001": the application completed without reading the entire request body.
2018-12-26 08:57:13.839 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 08:57:14.388 +08:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 08:57:14.458 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 08:57:14.464 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 08:57:14.468 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 08:57:14.530 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 08:57:40.986 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 08:57:41.129 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 08:57:41.185 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 08:57:41.455 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 08:57:41.803 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 08:57:41.817 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 08:57:41.887 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 08:57:41.907 +08:00 [WRN] Query: '(from Post <generated>_2 in DbSet<Post> select [<generated>_2]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 08:57:42.076 +08:00 [INF] Executed DbCommand (45ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 08:57:42.275 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 08:57:42.354 +08:00 [INF] Executed DbCommand (48ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 08:57:42.385 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 08:57:42.392 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 579.6264ms.
2018-12-26 08:57:42.407 +08:00 [INF] Executing ObjectResult, writing value of type 'blog.Core.Entities.PaginatedList`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 08:57:42.448 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 989.668ms
2018-12-26 08:57:42.458 +08:00 [INF] Request finished in 1472.6263ms 200 application/json; charset=utf-8
2018-12-26 08:57:42.470 +08:00 [INF] Connection id "0HLJAPKHFR4G6", Request id "0HLJAPKHFR4G6:00000001": the application completed without reading the entire request body.
2018-12-26 10:36:15.520 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 10:36:16.284 +08:00 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:36:16.355 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:36:16.361 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:36:16.366 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:36:16.428 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 10:36:18.057 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 10:36:18.219 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 10:36:18.272 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 10:36:18.493 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 10:36:18.859 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 10:36:18.873 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 10:36:18.945 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 10:36:18.963 +08:00 [WRN] Query: '(from Post <generated>_2 in DbSet<Post> select [<generated>_2]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 10:36:19.117 +08:00 [INF] Executed DbCommand (36ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 10:36:19.230 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:36:19.310 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:36:19.345 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:36:20.046 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1549.4629ms
2018-12-26 10:36:20.051 +08:00 [ERR] An unhandled exception has occurred while executing the request.
AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
IEnumerable`1 -> IEnumerable`1
System.Collections.Generic.IEnumerable`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> System.Collections.Generic.IEnumerable`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] ---> AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Type Map configuration:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Destination Member:
Tags
 ---> AutoMapper.AutoMapperConfigurationException: 
Unmapped members were found. Review the types and members below.
Add a custom mapping expression, ignore, add a custom resolver, or modify the source/destination type
For no matching constructor, add a no-arg ctor, add optional arguments, or map all of the constructor parameters
==========================================================================
AutoMapper created this type map for you, but your types cannot be mapped using the current configuration.
PostTag -> TagViewModel (Destination member list)
blog.Core.Entities.PostTag -> blog.Infrastructure.ViewModels.TagViewModel (Destination member list)

Unmapped properties:
TagName

   at AutoMapper.ConfigurationValidator.AssertConfigurationIsValid(IEnumerable`1 typeMaps) in C:\projects\automapper\src\AutoMapper\ConfigurationValidator.cs:line 48
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   at AutoMapper.Mapper.AutoMapper.IMapper.Map[TSource,TDestination](TSource source) in C:\projects\automapper\src\AutoMapper\Mapper.cs:line 233
   at blog.Api.Controllers.PostController.Get(PostParameters postParameters, String mediaType) in /Users/zhexuanzhou/Projects/blog_with_Identity/blog.Api/Controllers/PostController.cs:line 35
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-12-26 10:36:20.145 +08:00 [INF] Request finished in 2088.4381ms 500 text/html; charset=utf-8
2018-12-26 10:36:20.157 +08:00 [INF] Connection id "0HLJARBKTL1P8", Request id "0HLJARBKTL1P8:00000001": the application completed without reading the entire request body.
2018-12-26 10:39:23.263 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 10:39:23.851 +08:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:39:23.920 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:39:23.925 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:39:23.930 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:39:23.992 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 10:39:27.333 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 10:39:27.479 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 10:39:27.534 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 10:39:27.763 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 10:39:28.178 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 10:39:28.191 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 10:39:28.260 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 10:39:28.280 +08:00 [WRN] Query: '(from Post <generated>_2 in DbSet<Post> select [<generated>_2]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 10:39:28.417 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 10:39:28.584 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:39:28.614 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:39:28.670 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:39:29.342 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1576.0314ms
2018-12-26 10:39:29.347 +08:00 [ERR] An unhandled exception has occurred while executing the request.
AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
IEnumerable`1 -> IEnumerable`1
System.Collections.Generic.IEnumerable`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> System.Collections.Generic.IEnumerable`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] ---> AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Type Map configuration:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Destination Member:
Tags
 ---> AutoMapper.AutoMapperConfigurationException: 
Unmapped members were found. Review the types and members below.
Add a custom mapping expression, ignore, add a custom resolver, or modify the source/destination type
For no matching constructor, add a no-arg ctor, add optional arguments, or map all of the constructor parameters
==========================================================================
AutoMapper created this type map for you, but your types cannot be mapped using the current configuration.
PostTag -> TagViewModel (Destination member list)
blog.Core.Entities.PostTag -> blog.Infrastructure.ViewModels.TagViewModel (Destination member list)

Unmapped properties:
TagName

   at AutoMapper.ConfigurationValidator.AssertConfigurationIsValid(IEnumerable`1 typeMaps) in C:\projects\automapper\src\AutoMapper\ConfigurationValidator.cs:line 48
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   at AutoMapper.Mapper.AutoMapper.IMapper.Map[TSource,TDestination](TSource source) in C:\projects\automapper\src\AutoMapper\Mapper.cs:line 233
   at blog.Api.Controllers.PostController.Get(PostParameters postParameters, String mediaType) in /Users/zhexuanzhou/Projects/blog_with_Identity/blog.Api/Controllers/PostController.cs:line 35
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-12-26 10:39:29.444 +08:00 [INF] Request finished in 2108.8091ms 500 text/html; charset=utf-8
2018-12-26 10:39:29.457 +08:00 [INF] Connection id "0HLJARDDARSNG", Request id "0HLJARDDARSNG:00000001": the application completed without reading the entire request body.
2018-12-26 10:41:34.003 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 10:41:34.638 +08:00 [INF] Executed DbCommand (57ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:41:34.717 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:41:34.723 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:41:34.729 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:41:34.799 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 10:41:36.052 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 10:41:36.183 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 10:41:36.230 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 10:41:36.439 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 10:41:36.810 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 10:41:36.823 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 10:41:36.896 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 10:41:36.915 +08:00 [WRN] Query: '(from Post <generated>_2 in DbSet<Post> select [<generated>_2]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 10:41:37.074 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 10:41:37.243 +08:00 [INF] Executed DbCommand (26ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:41:37.274 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:41:37.308 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:41:37.945 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1502.5904ms
2018-12-26 10:41:37.950 +08:00 [ERR] An unhandled exception has occurred while executing the request.
AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
IEnumerable`1 -> IEnumerable`1
System.Collections.Generic.IEnumerable`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> System.Collections.Generic.IEnumerable`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] ---> AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Type Map configuration:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Destination Member:
Tags
 ---> AutoMapper.AutoMapperConfigurationException: 
Unmapped members were found. Review the types and members below.
Add a custom mapping expression, ignore, add a custom resolver, or modify the source/destination type
For no matching constructor, add a no-arg ctor, add optional arguments, or map all of the constructor parameters
==========================================================================
AutoMapper created this type map for you, but your types cannot be mapped using the current configuration.
PostTag -> TagViewModel (Destination member list)
blog.Core.Entities.PostTag -> blog.Infrastructure.ViewModels.TagViewModel (Destination member list)

Unmapped properties:
TagName

   at AutoMapper.ConfigurationValidator.AssertConfigurationIsValid(IEnumerable`1 typeMaps) in C:\projects\automapper\src\AutoMapper\ConfigurationValidator.cs:line 48
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   at AutoMapper.Mapper.AutoMapper.IMapper.Map[TSource,TDestination](TSource source) in C:\projects\automapper\src\AutoMapper\Mapper.cs:line 233
   at blog.Api.Controllers.PostController.Get(PostParameters postParameters, String mediaType) in /Users/zhexuanzhou/Projects/blog_with_Identity/blog.Api/Controllers/PostController.cs:line 35
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-12-26 10:41:38.038 +08:00 [INF] Request finished in 1986.1957ms 500 text/html; charset=utf-8
2018-12-26 10:41:38.049 +08:00 [INF] Connection id "0HLJAREJMFALU", Request id "0HLJAREJMFALU:00000001": the application completed without reading the entire request body.
2018-12-26 10:43:06.853 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 10:43:07.507 +08:00 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:43:07.592 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:43:07.597 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:43:07.603 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:43:07.671 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 10:43:08.446 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 10:43:08.585 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 10:43:08.647 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 10:43:08.854 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 10:43:09.244 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 10:43:09.261 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 10:43:09.348 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 10:43:09.367 +08:00 [WRN] Query: '(from Post <generated>_2 in DbSet<Post> select [<generated>_2]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 10:43:09.536 +08:00 [INF] Executed DbCommand (43ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 10:43:09.704 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:43:09.783 +08:00 [INF] Executed DbCommand (25ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:43:09.840 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:43:10.529 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1671.2984000000001ms
2018-12-26 10:43:10.534 +08:00 [ERR] An unhandled exception has occurred while executing the request.
AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
List`1 -> List`1
System.Collections.Generic.List`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] ---> AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Type Map configuration:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Destination Member:
Tags
 ---> AutoMapper.AutoMapperConfigurationException: 
Unmapped members were found. Review the types and members below.
Add a custom mapping expression, ignore, add a custom resolver, or modify the source/destination type
For no matching constructor, add a no-arg ctor, add optional arguments, or map all of the constructor parameters
==========================================================================
AutoMapper created this type map for you, but your types cannot be mapped using the current configuration.
PostTag -> TagViewModel (Destination member list)
blog.Core.Entities.PostTag -> blog.Infrastructure.ViewModels.TagViewModel (Destination member list)

Unmapped properties:
TagName

   at AutoMapper.ConfigurationValidator.AssertConfigurationIsValid(IEnumerable`1 typeMaps) in C:\projects\automapper\src\AutoMapper\ConfigurationValidator.cs:line 48
   at lambda_method(Closure , List`1 , List`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , List`1 , List`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , List`1 , List`1 , ResolutionContext )
   at AutoMapper.Mapper.AutoMapper.IMapper.Map[TSource,TDestination](TSource source) in C:\projects\automapper\src\AutoMapper\Mapper.cs:line 233
   at blog.Api.Controllers.PostController.Get(PostParameters postParameters, String mediaType) in /Users/zhexuanzhou/Projects/blog_with_Identity/blog.Api/Controllers/PostController.cs:line 35
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-12-26 10:43:10.620 +08:00 [INF] Request finished in 2173.6918ms 500 text/html; charset=utf-8
2018-12-26 10:43:10.631 +08:00 [INF] Connection id "0HLJARFF7SS3O", Request id "0HLJARFF7SS3O:00000001": the application completed without reading the entire request body.
2018-12-26 10:45:20.187 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 10:45:20.849 +08:00 [INF] Executed DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:45:20.921 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:45:20.927 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:45:20.931 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:45:20.994 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 10:45:21.593 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 10:45:21.726 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 10:45:21.773 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 10:45:21.984 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 10:45:22.364 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 10:45:22.417 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 10:45:22.492 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 10:45:22.510 +08:00 [WRN] Query: '(from Post <generated>_2 in DbSet<Post> select [<generated>_2]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 10:45:22.638 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 10:45:22.827 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:45:22.908 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:45:22.915 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:45:23.603 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1615.7498ms
2018-12-26 10:45:23.608 +08:00 [ERR] An unhandled exception has occurred while executing the request.
AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
IEnumerable`1 -> IEnumerable`1
System.Collections.Generic.IEnumerable`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> System.Collections.Generic.IEnumerable`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] ---> AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Type Map configuration:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Destination Member:
Tags
 ---> AutoMapper.AutoMapperConfigurationException: 
Unmapped members were found. Review the types and members below.
Add a custom mapping expression, ignore, add a custom resolver, or modify the source/destination type
For no matching constructor, add a no-arg ctor, add optional arguments, or map all of the constructor parameters
==========================================================================
AutoMapper created this type map for you, but your types cannot be mapped using the current configuration.
PostTag -> TagViewModel (Destination member list)
blog.Core.Entities.PostTag -> blog.Infrastructure.ViewModels.TagViewModel (Destination member list)

Unmapped properties:
TagName

   at AutoMapper.ConfigurationValidator.AssertConfigurationIsValid(IEnumerable`1 typeMaps) in C:\projects\automapper\src\AutoMapper\ConfigurationValidator.cs:line 48
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   at AutoMapper.Mapper.AutoMapper.IMapper.Map[TSource,TDestination](TSource source) in C:\projects\automapper\src\AutoMapper\Mapper.cs:line 233
   at blog.Api.Controllers.PostController.Get(PostParameters postParameters, String mediaType) in /Users/zhexuanzhou/Projects/blog_with_Identity/blog.Api/Controllers/PostController.cs:line 35
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-12-26 10:45:23.693 +08:00 [INF] Request finished in 2100.4623ms 500 text/html; charset=utf-8
2018-12-26 10:45:23.701 +08:00 [INF] Connection id "0HLJARGMTOQ18", Request id "0HLJARGMTOQ18:00000001": the application completed without reading the entire request body.
2018-12-26 10:47:10.470 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 10:47:11.054 +08:00 [INF] Executed DbCommand (49ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:47:11.125 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:47:11.131 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:47:11.136 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:47:11.210 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 10:47:11.844 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 10:47:11.976 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 10:47:12.023 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 10:47:12.251 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 10:47:12.621 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 10:47:12.634 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 10:47:12.705 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 10:47:12.725 +08:00 [WRN] Query: '(from Post <generated>_2 in DbSet<Post> select [<generated>_2]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 10:47:12.810 +08:00 [INF] Executed DbCommand (31ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 10:47:12.981 +08:00 [INF] Executed DbCommand (42ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:47:13.252 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:47:13.260 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:47:13.938 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1683.5131000000001ms
2018-12-26 10:47:13.942 +08:00 [ERR] An unhandled exception has occurred while executing the request.
AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
IEnumerable`1 -> IEnumerable`1
System.Collections.Generic.IEnumerable`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> System.Collections.Generic.IEnumerable`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] ---> AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Type Map configuration:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Destination Member:
Tags
 ---> AutoMapper.AutoMapperConfigurationException: 
Unmapped members were found. Review the types and members below.
Add a custom mapping expression, ignore, add a custom resolver, or modify the source/destination type
For no matching constructor, add a no-arg ctor, add optional arguments, or map all of the constructor parameters
==========================================================================
AutoMapper created this type map for you, but your types cannot be mapped using the current configuration.
PostTag -> TagViewModel (Destination member list)
blog.Core.Entities.PostTag -> blog.Infrastructure.ViewModels.TagViewModel (Destination member list)

Unmapped properties:
TagName

   at AutoMapper.ConfigurationValidator.AssertConfigurationIsValid(IEnumerable`1 typeMaps) in C:\projects\automapper\src\AutoMapper\ConfigurationValidator.cs:line 48
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   at AutoMapper.Mapper.AutoMapper.IMapper.Map[TSource,TDestination](TSource source) in C:\projects\automapper\src\AutoMapper\Mapper.cs:line 233
   at blog.Api.Controllers.PostController.Get(PostParameters postParameters, String mediaType) in /Users/zhexuanzhou/Projects/blog_with_Identity/blog.Api/Controllers/PostController.cs:line 35
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-12-26 10:47:14.029 +08:00 [INF] Request finished in 2185.7622ms 500 text/html; charset=utf-8
2018-12-26 10:47:14.041 +08:00 [INF] Connection id "0HLJARHNP8A4M", Request id "0HLJARHNP8A4M:00000001": the application completed without reading the entire request body.
2018-12-26 10:47:53.257 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 10:47:53.891 +08:00 [INF] Executed DbCommand (55ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:47:53.968 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:47:53.974 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:47:53.978 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:47:54.043 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 10:47:55.344 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 10:47:55.507 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 10:47:55.554 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 10:47:55.764 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 10:47:56.133 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 10:47:56.146 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 10:47:56.219 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 10:47:56.239 +08:00 [WRN] Query: '(from Post <generated>_2 in DbSet<Post> select [<generated>_2]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 10:47:56.372 +08:00 [INF] Executed DbCommand (39ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 10:47:56.883 +08:00 [INF] Executed DbCommand (70ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:47:57.051 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:47:57.195 +08:00 [INF] Executed DbCommand (47ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:47:57.279 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1133.0196ms.
2018-12-26 10:47:57.307 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 10:47:57.361 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1591.9795000000001ms
2018-12-26 10:47:57.378 +08:00 [INF] Request finished in 2034.8147ms 200 application/json; charset=utf-8
2018-12-26 10:47:57.395 +08:00 [INF] Connection id "0HLJARI4NM8GU", Request id "0HLJARI4NM8GU:00000001": the application completed without reading the entire request body.
2018-12-26 10:50:33.067 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 10:50:33.631 +08:00 [INF] Executed DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:50:33.702 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:50:33.708 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:50:33.713 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:50:33.775 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 10:50:40.172 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 10:50:40.306 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 10:50:40.354 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 10:50:40.566 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 10:50:40.981 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 10:50:41.011 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 10:50:41.089 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 10:50:41.108 +08:00 [WRN] Query: '(from Post <generated>_2 in DbSet<Post> select [<generated>_2]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 10:50:41.239 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 10:50:41.356 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:50:41.566 +08:00 [INF] Executed DbCommand (101ms) [Parameters=[@__item_TagId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `tag`.`Id`, `tag`.`TagName`
FROM `Tags` AS `tag`
WHERE `tag`.`Id` = @__item_TagId_0
2018-12-26 10:50:41.669 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__item_TagId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `tag`.`Id`, `tag`.`TagName`
FROM `Tags` AS `tag`
WHERE `tag`.`Id` = @__item_TagId_0
2018-12-26 10:50:41.676 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:50:41.704 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__item_TagId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `tag`.`Id`, `tag`.`TagName`
FROM `Tags` AS `tag`
WHERE `tag`.`Id` = @__item_TagId_0
2018-12-26 10:50:41.712 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:50:41.718 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__item_TagId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `tag`.`Id`, `tag`.`TagName`
FROM `Tags` AS `tag`
WHERE `tag`.`Id` = @__item_TagId_0
2018-12-26 10:50:41.755 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 765.6439ms.
2018-12-26 10:50:41.770 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 10:50:41.807 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1236.9950000000001ms
2018-12-26 10:50:41.816 +08:00 [INF] Request finished in 1644.9148ms 200 application/json; charset=utf-8
2018-12-26 10:50:41.839 +08:00 [INF] Connection id "0HLJARJLRPCR6", Request id "0HLJARJLRPCR6:00000001": the application completed without reading the entire request body.
2018-12-26 10:52:29.095 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 10:52:29.684 +08:00 [INF] Executed DbCommand (68ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:52:29.754 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:52:29.760 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:52:29.765 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:52:29.830 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 10:52:36.929 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 10:52:37.070 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 10:52:37.123 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 10:52:37.352 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 10:52:37.718 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 10:52:37.733 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 10:52:37.846 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 10:52:37.866 +08:00 [WRN] Query: '(from Post <generated>_2 in DbSet<Post> select [<generated>_2]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 10:52:38.017 +08:00 [INF] Executed DbCommand (36ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 10:52:38.137 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:52:38.299 +08:00 [INF] Executed DbCommand (50ms) [Parameters=[@__item_TagId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `tag`.`Id`, `tag`.`TagName`
FROM `Tags` AS `tag`
WHERE `tag`.`Id` = @__item_TagId_0
2018-12-26 10:52:38.375 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__item_TagId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `tag`.`Id`, `tag`.`TagName`
FROM `Tags` AS `tag`
WHERE `tag`.`Id` = @__item_TagId_0
2018-12-26 10:52:38.508 +08:00 [INF] Executed DbCommand (30ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:52:38.542 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__item_TagId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `tag`.`Id`, `tag`.`TagName`
FROM `Tags` AS `tag`
WHERE `tag`.`Id` = @__item_TagId_0
2018-12-26 10:52:38.571 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:52:38.578 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__item_TagId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `tag`.`Id`, `tag`.`TagName`
FROM `Tags` AS `tag`
WHERE `tag`.`Id` = @__item_TagId_0
2018-12-26 10:52:38.585 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 857.4321ms.
2018-12-26 10:52:38.601 +08:00 [INF] Executing ObjectResult, writing value of type 'blog.Core.Entities.PaginatedList`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 10:52:38.642 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1286.9092ms
2018-12-26 10:52:38.652 +08:00 [INF] Request finished in 1723.1629ms 200 application/json; charset=utf-8
2018-12-26 10:52:38.665 +08:00 [INF] Connection id "0HLJARKOKSLT4", Request id "0HLJARKOKSLT4:00000001": the application completed without reading the entire request body.
2018-12-26 10:56:33.883 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 10:56:34.602 +08:00 [INF] Executed DbCommand (66ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:56:34.675 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:56:34.682 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:56:34.687 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 10:56:34.758 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 10:56:35.708 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 10:56:35.859 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 10:56:35.912 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 10:56:36.137 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 10:56:36.523 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 10:56:36.537 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 10:56:36.607 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 10:56:36.647 +08:00 [WRN] Query: '(from Post <generated>_2 in DbSet<Post> select [<generated>_2]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 10:56:36.805 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 10:56:37.020 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:56:37.048 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:56:37.107 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__get_Item_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`PostId`, `pt`.`TagId`, `pt`.`Id`
FROM `PostTags` AS `pt`
WHERE `pt`.`PostId` = @__get_Item_Id_0
2018-12-26 10:56:37.114 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 581.71350000000007ms.
2018-12-26 10:56:37.129 +08:00 [INF] Executing ObjectResult, writing value of type 'blog.Core.Entities.PaginatedList`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 10:56:37.169 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1028.7015000000001ms
2018-12-26 10:56:37.179 +08:00 [INF] Request finished in 1471.9686ms 200 application/json; charset=utf-8
2018-12-26 10:56:37.194 +08:00 [INF] Connection id "0HLJARMVQE0J2", Request id "0HLJARMVQE0J2:00000001": the application completed without reading the entire request body.
2018-12-26 11:00:03.802 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:00:04.428 +08:00 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:00:04.502 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:00:04.508 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:00:04.513 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:00:04.594 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 11:00:05.712 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 11:00:05.847 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 11:00:05.893 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 11:00:06.105 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 11:00:06.554 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 11:00:06.567 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:00:06.642 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 11:00:06.660 +08:00 [WRN] Query: '(from Post <generated>_2 in DbSet<Post> select [<generated>_2]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 11:00:06.840 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 11:00:06.905 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 342.0054ms.
2018-12-26 11:00:06.920 +08:00 [INF] Executing ObjectResult, writing value of type 'blog.Core.Entities.PaginatedList`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 11:00:06.957 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 849.1352ms
2018-12-26 11:00:06.966 +08:00 [INF] Request finished in 1254.5937ms 200 application/json; charset=utf-8
2018-12-26 11:00:06.979 +08:00 [INF] Connection id "0HLJAROUDBSKE", Request id "0HLJAROUDBSKE:00000001": the application completed without reading the entire request body.
2018-12-26 11:00:42.527 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:00:43.111 +08:00 [INF] Executed DbCommand (55ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:00:43.192 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:00:43.200 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:00:43.205 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:00:43.274 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 11:00:46.072 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 11:00:46.220 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 11:00:46.265 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 11:00:46.473 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 11:00:46.847 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 11:00:46.861 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:00:46.934 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 11:00:46.953 +08:00 [WRN] Query: '(from Post <generated>_2 in DbSet<Post> select [<generated>_2]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 11:00:47.084 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`
FROM `Posts` AS `p`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 11:00:47.185 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 329.03720000000004ms.
2018-12-26 11:00:47.200 +08:00 [INF] Executing ObjectResult, writing value of type 'blog.Core.Entities.PaginatedList`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 11:00:47.235 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 759.1259ms
2018-12-26 11:00:47.245 +08:00 [INF] Request finished in 1173.5239ms 200 application/json; charset=utf-8
2018-12-26 11:00:47.257 +08:00 [INF] Connection id "0HLJARPADPIVG", Request id "0HLJARPADPIVG:00000001": the application completed without reading the entire request body.
2018-12-26 11:02:33.719 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:02:34.256 +08:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:02:34.326 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:02:34.332 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:02:34.337 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:02:34.399 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 11:02:40.430 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 11:02:40.567 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 11:02:40.616 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 11:02:40.825 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 11:02:41.210 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 11:02:41.224 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:02:41.271 +08:00 [WRN] The Include operation for navigation '[pt].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 11:02:41.341 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `pt`
2018-12-26 11:02:41.360 +08:00 [WRN] Query: '(from Post pt in DbSet<Post> select [pt]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 11:02:41.611 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`Id`, `pt`.`AuthorId`, `pt`.`Body`, `pt`.`CreateTime`, `pt`.`LastModify`, `pt`.`Title`
FROM `Posts` AS `pt`
ORDER BY `pt`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 11:02:41.743 +08:00 [INF] Executed DbCommand (60ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt.PostTags`.`PostId`, `pt.PostTags`.`TagId`, `pt.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `pt.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `pt.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT `pt0`.`Id`
    FROM `Posts` AS `pt0`
    ORDER BY `pt0`.`Id`
    LIMIT @__p_1 OFFSET @__p_0
) AS `t` ON `pt.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2018-12-26 11:02:41.830 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 610.4244ms.
2018-12-26 11:02:41.845 +08:00 [INF] Executing ObjectResult, writing value of type 'blog.Core.Entities.PaginatedList`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 11:02:41.885 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1056.5601000000001ms
2018-12-26 11:02:41.895 +08:00 [INF] Request finished in 1465.9509ms 200 application/json; charset=utf-8
2018-12-26 11:02:41.908 +08:00 [INF] Connection id "0HLJARQCGHCAU", Request id "0HLJARQCGHCAU:00000001": the application completed without reading the entire request body.
2018-12-26 11:04:51.983 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:04:52.636 +08:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:04:52.705 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:04:52.711 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:04:52.715 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:04:52.777 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 11:04:53.471 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 11:04:53.616 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 11:04:53.663 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 11:04:53.875 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 11:04:54.283 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 11:04:54.296 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:04:54.310 +08:00 [WRN] The Include operation for navigation '[pt].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 11:04:54.381 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `pt`
2018-12-26 11:04:54.400 +08:00 [WRN] Query: '(from Post pt in DbSet<Post> select [pt]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 11:04:54.669 +08:00 [INF] Executed DbCommand (40ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`Id`, `pt`.`AuthorId`, `pt`.`Body`, `pt`.`CreateTime`, `pt`.`LastModify`, `pt`.`Title`
FROM `Posts` AS `pt`
ORDER BY `pt`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 11:04:54.750 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt.PostTags`.`PostId`, `pt.PostTags`.`TagId`, `pt.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `pt.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `pt.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT `pt0`.`Id`
    FROM `Posts` AS `pt0`
    ORDER BY `pt0`.`Id`
    LIMIT @__p_1 OFFSET @__p_0
) AS `t` ON `pt.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2018-12-26 11:04:55.814 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1936.0452ms
2018-12-26 11:04:55.819 +08:00 [ERR] An unhandled exception has occurred while executing the request.
AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
IEnumerable`1 -> IEnumerable`1
System.Collections.Generic.IEnumerable`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> System.Collections.Generic.IEnumerable`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] ---> AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Type Map configuration:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Destination Member:
Tags
 ---> AutoMapper.AutoMapperConfigurationException: 
Unmapped members were found. Review the types and members below.
Add a custom mapping expression, ignore, add a custom resolver, or modify the source/destination type
For no matching constructor, add a no-arg ctor, add optional arguments, or map all of the constructor parameters
==========================================================================
AutoMapper created this type map for you, but your types cannot be mapped using the current configuration.
PostTag -> TagViewModel (Destination member list)
blog.Core.Entities.PostTag -> blog.Infrastructure.ViewModels.TagViewModel (Destination member list)

Unmapped properties:
TagName

   at AutoMapper.ConfigurationValidator.AssertConfigurationIsValid(IEnumerable`1 typeMaps) in C:\projects\automapper\src\AutoMapper\ConfigurationValidator.cs:line 48
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   at AutoMapper.Mapper.AutoMapper.IMapper.Map[TSource,TDestination](TSource source) in C:\projects\automapper\src\AutoMapper\Mapper.cs:line 233
   at blog.Api.Controllers.PostController.Get(PostParameters postParameters, String mediaType) in /Users/zhexuanzhou/Projects/blog_with_Identity/blog.Api/Controllers/PostController.cs:line 35
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-12-26 11:04:55.916 +08:00 [INF] Request finished in 2445.2742ms 500 text/html; charset=utf-8
2018-12-26 11:04:55.928 +08:00 [INF] Connection id "0HLJARRK57VFK", Request id "0HLJARRK57VFK:00000001": the application completed without reading the entire request body.
2018-12-26 11:07:16.329 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:07:16.889 +08:00 [INF] Executed DbCommand (49ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:07:16.959 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:07:16.965 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:07:16.969 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:07:17.030 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 11:07:25.701 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 11:07:25.841 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 11:07:25.886 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 11:07:26.107 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 11:07:26.491 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 11:07:26.504 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:07:26.517 +08:00 [WRN] The Include operation for navigation '[pt].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 11:07:26.585 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `pt`
2018-12-26 11:07:26.604 +08:00 [WRN] Query: '(from Post pt in DbSet<Post> select [pt]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 11:07:26.878 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`Id`, `pt`.`AuthorId`, `pt`.`Body`, `pt`.`CreateTime`, `pt`.`LastModify`, `pt`.`Title`
FROM `Posts` AS `pt`
ORDER BY `pt`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 11:07:26.951 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt.PostTags`.`PostId`, `pt.PostTags`.`TagId`, `pt.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `pt.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `pt.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT `pt0`.`Id`
    FROM `Posts` AS `pt0`
    ORDER BY `pt0`.`Id`
    LIMIT @__p_1 OFFSET @__p_0
) AS `t` ON `pt.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2018-12-26 11:07:27.036 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 536.0366ms.
2018-12-26 11:07:27.051 +08:00 [INF] Executing ObjectResult, writing value of type 'blog.Core.Entities.PaginatedList`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 11:07:27.091 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 980.84840000000008ms
2018-12-26 11:07:27.102 +08:00 [INF] Request finished in 1401.9862ms 200 application/json; charset=utf-8
2018-12-26 11:07:27.115 +08:00 [INF] Connection id "0HLJART1H8KKE", Request id "0HLJART1H8KKE:00000001": the application completed without reading the entire request body.
2018-12-26 11:08:37.924 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:08:38.584 +08:00 [INF] Executed DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:08:38.656 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:08:38.662 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:08:38.667 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:08:38.728 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 11:08:39.910 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 11:08:40.054 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 11:08:40.100 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 11:08:40.314 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 11:08:40.712 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 11:08:40.729 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:08:40.746 +08:00 [WRN] The Include operation for navigation '[pt].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 11:08:40.824 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `pt`
2018-12-26 11:08:40.845 +08:00 [WRN] Query: '(from Post pt in DbSet<Post> select [pt]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 11:08:41.067 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`Id`, `pt`.`AuthorId`, `pt`.`Body`, `pt`.`CreateTime`, `pt`.`LastModify`, `pt`.`Title`
FROM `Posts` AS `pt`
ORDER BY `pt`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 11:08:41.150 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt.PostTags`.`PostId`, `pt.PostTags`.`TagId`, `pt.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `pt.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `pt.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT `pt0`.`Id`
    FROM `Posts` AS `pt0`
    ORDER BY `pt0`.`Id`
    LIMIT @__p_1 OFFSET @__p_0
) AS `t` ON `pt.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2018-12-26 11:08:41.262 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 538.40330000000006ms.
2018-12-26 11:08:41.277 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 11:08:41.314 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 996.306ms
2018-12-26 11:08:41.324 +08:00 [INF] Request finished in 1415.1247ms 200 application/json; charset=utf-8
2018-12-26 11:08:41.338 +08:00 [INF] Connection id "0HLJARTNKO35M", Request id "0HLJARTNKO35M:00000001": the application completed without reading the entire request body.
2018-12-26 11:10:01.214 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:10:01.764 +08:00 [INF] Executed DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:10:01.837 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:10:01.843 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:10:01.849 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:10:01.924 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 11:10:04.993 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 11:10:05.138 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 11:10:05.186 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 11:10:05.414 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 11:10:05.786 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 11:10:05.800 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:10:05.813 +08:00 [WRN] The Include operation for navigation '[pt].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 11:10:05.882 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `pt`
2018-12-26 11:10:05.900 +08:00 [WRN] Query: '(from Post pt in DbSet<Post> select [pt]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 11:10:06.158 +08:00 [INF] Executed DbCommand (45ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`Id`, `pt`.`AuthorId`, `pt`.`Body`, `pt`.`CreateTime`, `pt`.`LastModify`, `pt`.`Title`
FROM `Posts` AS `pt`
ORDER BY `pt`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 11:10:06.234 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt.PostTags`.`PostId`, `pt.PostTags`.`TagId`, `pt.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `pt.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `pt.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT `pt0`.`Id`
    FROM `Posts` AS `pt0`
    ORDER BY `pt0`.`Id`
    LIMIT @__p_1 OFFSET @__p_0
) AS `t` ON `pt.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2018-12-26 11:10:06.369 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 573.48750000000007ms.
2018-12-26 11:10:06.384 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 11:10:06.421 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1003.6338000000001ms
2018-12-26 11:10:06.431 +08:00 [INF] Request finished in 1439.0935ms 200 application/json; charset=utf-8
2018-12-26 11:10:06.445 +08:00 [INF] Connection id "0HLJARUH0CV9G", Request id "0HLJARUH0CV9G:00000001": the application completed without reading the entire request body.
2018-12-26 11:11:09.051 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:11:09.610 +08:00 [INF] Executed DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:11:09.680 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:11:09.686 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:11:09.691 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:11:09.751 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 11:11:13.163 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 11:11:13.306 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 11:11:13.355 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 11:11:13.566 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 11:11:13.953 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 11:11:13.966 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:11:13.980 +08:00 [WRN] The Include operation for navigation '[pt].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 11:11:14.052 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `pt`
2018-12-26 11:11:14.070 +08:00 [WRN] Query: '(from Post pt in DbSet<Post> select [pt]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 11:11:14.318 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`Id`, `pt`.`AuthorId`, `pt`.`Body`, `pt`.`CreateTime`, `pt`.`LastModify`, `pt`.`Title`
FROM `Posts` AS `pt`
ORDER BY `pt`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 11:11:14.391 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt.PostTags`.`PostId`, `pt.PostTags`.`TagId`, `pt.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `pt.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `pt.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT `pt0`.`Id`
    FROM `Posts` AS `pt0`
    ORDER BY `pt0`.`Id`
    LIMIT @__p_1 OFFSET @__p_0
) AS `t` ON `pt.PostTags`.`PostId` = `t`.`Id`
ORDER BY `t`.`Id`
2018-12-26 11:11:14.523 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 561.56810000000007ms.
2018-12-26 11:11:14.539 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 11:11:14.576 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1006.6564000000001ms
2018-12-26 11:11:14.586 +08:00 [INF] Request finished in 1424.0164ms 200 application/json; charset=utf-8
2018-12-26 11:11:14.599 +08:00 [INF] Connection id "0HLJARV5A9UHS", Request id "0HLJARV5A9UHS:00000001": the application completed without reading the entire request body.
2018-12-26 11:13:20.725 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:13:21.325 +08:00 [INF] Executed DbCommand (55ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:13:21.406 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:13:21.412 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:13:21.417 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:13:21.480 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 11:13:22.298 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 11:13:22.445 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 11:13:22.491 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 11:13:22.705 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 11:13:23.076 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 11:13:23.090 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:13:23.104 +08:00 [WRN] The Include operation for navigation '[pt].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 11:13:23.107 +08:00 [WRN] The Include operation for navigation '[pt].Author' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 11:13:23.174 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `pt`
2018-12-26 11:13:23.193 +08:00 [WRN] Query: '(from Post pt in DbSet<Post> select [pt]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 11:13:23.423 +08:00 [INF] Executed DbCommand (36ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`Id`, `pt`.`AuthorId`, `pt`.`Body`, `pt`.`CreateTime`, `pt`.`LastModify`, `pt`.`Title`, `pt.Author`.`Id`, `pt.Author`.`Gender`, `pt.Author`.`UserId`
FROM `Posts` AS `pt`
INNER JOIN `Authors` AS `pt.Author` ON `pt`.`AuthorId` = `pt.Author`.`Id`
ORDER BY `pt`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 11:13:23.586 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt.PostTags`.`PostId`, `pt.PostTags`.`TagId`, `pt.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `pt.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `pt.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t`.*
    FROM (
        SELECT `pt0`.`Id`
        FROM `Posts` AS `pt0`
        INNER JOIN `Authors` AS `pt.Author0` ON `pt0`.`AuthorId` = `pt.Author0`.`Id`
        ORDER BY `pt0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t`
) AS `t0` ON `pt.PostTags`.`PostId` = `t0`.`Id`
ORDER BY `t0`.`Id`
2018-12-26 11:13:23.671 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 586.3902ms.
2018-12-26 11:13:23.687 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 11:13:23.724 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1016.1662ms
2018-12-26 11:13:23.734 +08:00 [INF] Request finished in 1437.2036ms 200 application/json; charset=utf-8
2018-12-26 11:13:23.748 +08:00 [INF] Connection id "0HLJAS0BPJ072", Request id "0HLJAS0BPJ072:00000001": the application completed without reading the entire request body.
2018-12-26 11:14:33.071 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:14:33.770 +08:00 [INF] Executed DbCommand (72ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:14:33.858 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:14:33.864 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:14:33.869 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:14:33.936 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 11:14:35.279 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 11:14:35.455 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 11:14:35.512 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 11:14:35.756 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 11:14:36.166 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 11:14:36.181 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:14:36.196 +08:00 [WRN] The Include operation for navigation '[pt].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 11:14:36.198 +08:00 [WRN] The Include operation for navigation '[pt].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 11:14:36.267 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `pt`
2018-12-26 11:14:36.290 +08:00 [WRN] Query: '(from Post pt in DbSet<Post> select [pt]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 11:14:36.651 +08:00 [INF] Executed DbCommand (57ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`Id`, `pt`.`AuthorId`, `pt`.`Body`, `pt`.`CreateTime`, `pt`.`LastModify`, `pt`.`Title`, `pt.Author`.`Id`, `pt.Author`.`Gender`, `pt.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `pt`
INNER JOIN `Authors` AS `pt.Author` ON `pt`.`AuthorId` = `pt.Author`.`Id`
LEFT JOIN (
    SELECT `pt.Author.User`.*
    FROM `AspNetUsers` AS `pt.Author.User`
    WHERE `pt.Author.User`.`Discriminator` = 'User'
) AS `t` ON `pt.Author`.`UserId` = `t`.`Id`
ORDER BY `pt`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 11:14:36.842 +08:00 [INF] Executed DbCommand (44ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt.PostTags`.`PostId`, `pt.PostTags`.`TagId`, `pt.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `pt.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `pt.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `pt0`.`Id`
        FROM `Posts` AS `pt0`
        INNER JOIN `Authors` AS `pt.Author0` ON `pt0`.`AuthorId` = `pt.Author0`.`Id`
        LEFT JOIN (
            SELECT `pt.Author.User0`.*
            FROM `AspNetUsers` AS `pt.Author.User0`
            WHERE `pt.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `pt.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `pt0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `pt.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2018-12-26 11:14:36.923 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 748.4203ms.
2018-12-26 11:14:36.940 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 11:14:36.979 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1219.3828ms
2018-12-26 11:14:36.989 +08:00 [INF] Request finished in 1711.9459ms 200 application/json; charset=utf-8
2018-12-26 11:14:37.003 +08:00 [INF] Connection id "0HLJAS11HMHO0", Request id "0HLJAS11HMHO0:00000001": the application completed without reading the entire request body.
2018-12-26 11:15:37.160 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:15:37.701 +08:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:15:37.771 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:15:37.777 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:15:37.782 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 11:15:37.843 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 11:15:44.713 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 11:15:44.845 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 11:15:44.891 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 11:15:45.097 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 11:15:45.473 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 11:15:45.487 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 11:15:45.503 +08:00 [WRN] The Include operation for navigation '[pt].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 11:15:45.505 +08:00 [WRN] The Include operation for navigation '[pt].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 11:15:45.571 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `pt`
2018-12-26 11:15:45.590 +08:00 [WRN] Query: '(from Post pt in DbSet<Post> select [pt]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 11:15:46.003 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt`.`Id`, `pt`.`AuthorId`, `pt`.`Body`, `pt`.`CreateTime`, `pt`.`LastModify`, `pt`.`Title`, `pt.Author`.`Id`, `pt.Author`.`Gender`, `pt.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `pt`
INNER JOIN `Authors` AS `pt.Author` ON `pt`.`AuthorId` = `pt.Author`.`Id`
LEFT JOIN (
    SELECT `pt.Author.User`.*
    FROM `AspNetUsers` AS `pt.Author.User`
    WHERE `pt.Author.User`.`Discriminator` = 'User'
) AS `t` ON `pt.Author`.`UserId` = `t`.`Id`
ORDER BY `pt`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 11:15:46.146 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `pt.PostTags`.`PostId`, `pt.PostTags`.`TagId`, `pt.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `pt.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `pt.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `pt0`.`Id`
        FROM `Posts` AS `pt0`
        INNER JOIN `Authors` AS `pt.Author0` ON `pt0`.`AuthorId` = `pt.Author0`.`Id`
        LEFT JOIN (
            SELECT `pt.Author.User0`.*
            FROM `AspNetUsers` AS `pt.Author.User0`
            WHERE `pt.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `pt.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `pt0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `pt.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2018-12-26 11:15:46.228 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 745.6081ms.
2018-12-26 11:15:46.243 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 11:15:46.281 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1180.0112000000001ms
2018-12-26 11:15:46.290 +08:00 [INF] Request finished in 1578.2676ms 200 application/json; charset=utf-8
2018-12-26 11:15:46.304 +08:00 [INF] Connection id "0HLJAS1M7QIMQ", Request id "0HLJAS1M7QIMQ:00000001": the application completed without reading the entire request body.
2018-12-26 13:11:59.717 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:12:00.354 +08:00 [INF] Executed DbCommand (65ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:12:00.454 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:12:00.463 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:12:00.468 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:12:00.538 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 13:12:01.286 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 13:12:01.431 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 13:12:01.487 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 13:12:01.715 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 13:12:02.086 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 13:12:02.099 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:12:02.114 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:12:02.117 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:12:02.197 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 13:12:02.218 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 13:12:02.482 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 13:12:02.623 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2018-12-26 13:12:03.521 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1803.0272ms
2018-12-26 13:12:03.525 +08:00 [ERR] An unhandled exception has occurred while executing the request.
AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
IEnumerable`1 -> IEnumerable`1
System.Collections.Generic.IEnumerable`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> System.Collections.Generic.IEnumerable`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] ---> AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Type Map configuration:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Destination Member:
Tags
 ---> AutoMapper.AutoMapperConfigurationException: 
Unmapped members were found. Review the types and members below.
Add a custom mapping expression, ignore, add a custom resolver, or modify the source/destination type
For no matching constructor, add a no-arg ctor, add optional arguments, or map all of the constructor parameters
==============================================================================
AutoMapper created this type map for you, but your types cannot be mapped using the current configuration.
PostTag -> PostTagViewModel (Destination member list)
blog.Core.Entities.PostTag -> blog.Infrastructure.ViewModels.PostTagViewModel (Destination member list)

Unmapped properties:
TagName

   at AutoMapper.ConfigurationValidator.AssertConfigurationIsValid(IEnumerable`1 typeMaps) in C:\projects\automapper\src\AutoMapper\ConfigurationValidator.cs:line 48
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   at AutoMapper.Mapper.AutoMapper.IMapper.Map[TSource,TDestination](TSource source) in C:\projects\automapper\src\AutoMapper\Mapper.cs:line 233
   at blog.Api.Controllers.PostController.Get(PostParameters postParameters, String mediaType) in /Users/zhexuanzhou/Projects/blog_with_Identity/blog.Api/Controllers/PostController.cs:line 35
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-12-26 13:12:03.619 +08:00 [INF] Request finished in 2333.1596ms 500 text/html; charset=utf-8
2018-12-26 13:12:03.632 +08:00 [INF] Connection id "0HLJAU2LE0G30", Request id "0HLJAU2LE0G30:00000001": the application completed without reading the entire request body.
2018-12-26 13:12:45.858 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:12:46.443 +08:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:12:46.515 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:12:46.520 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:12:46.525 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:12:46.587 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 13:12:50.711 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 13:12:50.849 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 13:12:50.897 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 13:12:51.112 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 13:12:51.533 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 13:12:51.561 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:12:51.576 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:12:51.579 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:12:51.644 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 13:12:51.663 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 13:12:51.926 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 13:12:52.069 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2018-12-26 13:12:52.149 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 607.8035ms.
2018-12-26 13:12:52.166 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 13:12:52.213 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1097.6281000000001ms
2018-12-26 13:12:52.224 +08:00 [INF] Request finished in 1513.4457ms 200 application/json; charset=utf-8
2018-12-26 13:12:52.238 +08:00 [INF] Connection id "0HLJAU344PHBK", Request id "0HLJAU344PHBK:00000001": the application completed without reading the entire request body.
2018-12-26 13:14:45.085 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:14:45.678 +08:00 [INF] Executed DbCommand (66ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:14:45.764 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:14:45.772 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:14:45.777 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:14:45.847 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 13:14:48.391 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 13:14:48.532 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 13:14:48.587 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 13:14:48.827 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 13:14:49.189 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 13:14:49.202 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:14:49.218 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:14:49.221 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:14:49.288 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 13:14:49.307 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 13:14:49.575 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 13:14:49.723 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2018-12-26 13:14:49.811 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 612.9231ms.
2018-12-26 13:14:49.826 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 13:14:49.864 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1032.9492ms
2018-12-26 13:14:49.873 +08:00 [INF] Request finished in 1483.5534ms 200 application/json; charset=utf-8
2018-12-26 13:14:49.884 +08:00 [INF] Connection id "0HLJAU477PMLC", Request id "0HLJAU477PMLC:00000001": the application completed without reading the entire request body.
2018-12-26 13:15:22.898 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:15:23.453 +08:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:15:23.523 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:15:23.528 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:15:23.533 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:15:23.596 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 13:15:36.931 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 13:15:37.083 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 13:15:37.132 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 13:15:37.353 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 13:15:37.728 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 13:15:37.742 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:15:37.757 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:15:37.760 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:15:37.825 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 13:15:37.844 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 13:15:38.112 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 13:15:38.256 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2018-12-26 13:15:38.368 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 631.28600000000006ms.
2018-12-26 13:15:38.384 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 13:15:38.420 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1063.3193ms
2018-12-26 13:15:38.429 +08:00 [INF] Request finished in 1499.5283ms 200 application/json; charset=utf-8
2018-12-26 13:15:38.442 +08:00 [INF] Connection id "0HLJAU4LLOSUQ", Request id "0HLJAU4LLOSUQ:00000001": the application completed without reading the entire request body.
2018-12-26 13:17:01.644 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:17:02.197 +08:00 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:17:02.267 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:17:02.273 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:17:02.277 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:17:02.340 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 13:17:06.520 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 13:17:06.654 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 13:17:06.703 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 13:17:06.914 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 13:17:07.319 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 13:17:07.334 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:17:07.349 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:17:07.353 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:17:07.426 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 13:17:07.444 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 13:17:07.777 +08:00 [INF] Executed DbCommand (39ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 13:17:07.922 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2018-12-26 13:17:08.006 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 677.3479ms.
2018-12-26 13:17:08.021 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 13:17:08.059 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1140.9117ms
2018-12-26 13:17:08.068 +08:00 [INF] Request finished in 1549.483ms 200 application/json; charset=utf-8
2018-12-26 13:17:08.082 +08:00 [INF] Connection id "0HLJAU5GCP5EC", Request id "0HLJAU5GCP5EC:00000001": the application completed without reading the entire request body.
2018-12-26 13:18:10.919 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:18:11.469 +08:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:18:11.547 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:18:11.555 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:18:11.561 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:18:11.632 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 13:18:14.725 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 13:18:14.874 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 13:18:14.922 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 13:18:15.143 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 13:18:15.514 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 13:18:15.528 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:18:15.542 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:18:15.545 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:18:15.613 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 13:18:15.631 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 13:18:15.943 +08:00 [INF] Executed DbCommand (36ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 13:18:16.097 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2018-12-26 13:18:16.179 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 656.3053ms.
2018-12-26 13:18:16.195 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 13:18:16.232 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1085.8121ms
2018-12-26 13:18:16.242 +08:00 [INF] Request finished in 1518.3911ms 200 application/json; charset=utf-8
2018-12-26 13:18:16.254 +08:00 [INF] Connection id "0HLJAU64N7AV6", Request id "0HLJAU64N7AV6:00000001": the application completed without reading the entire request body.
2018-12-26 13:19:21.981 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:19:22.747 +08:00 [INF] Executed DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:19:22.817 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:19:22.823 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:19:22.828 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:19:22.892 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 13:19:24.619 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 13:19:24.765 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 13:19:24.817 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 13:19:25.067 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 13:19:25.447 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 13:19:25.461 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:19:25.476 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:19:25.478 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:19:25.541 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 13:19:25.561 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 13:19:25.809 +08:00 [INF] Executed DbCommand (41ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 13:19:26.015 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2018-12-26 13:19:26.099 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 643.5163ms.
2018-12-26 13:19:26.115 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 13:19:26.153 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1083.0093ms
2018-12-26 13:19:26.167 +08:00 [INF] Request finished in 1549.0551ms 200 application/json; charset=utf-8
2018-12-26 13:19:26.181 +08:00 [INF] Connection id "0HLJAU6PHN49A", Request id "0HLJAU6PHN49A:00000001": the application completed without reading the entire request body.
2018-12-26 13:20:49.782 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:20:50.398 +08:00 [INF] Executed DbCommand (72ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:20:50.484 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:20:50.493 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:20:50.498 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:20:50.573 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 13:20:51.423 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 13:20:51.559 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 13:20:51.606 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 13:20:51.821 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 13:20:52.201 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 13:20:52.216 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:20:52.232 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag.TagName' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:20:52.235 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:20:52.303 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 13:20:52.322 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 13:20:53.790 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1966.0569ms
2018-12-26 13:20:53.792 +08:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The property 'TagName' is not a navigation property of entity type 'Tag'. The 'Include(string)' method can only be used with a '.' separated list of navigation property names.
   at Microsoft.EntityFrameworkCore.Query.Internal.IncludeCompiler.WalkNavigations(IEntityType entityType, IReadOnlyList`1 navigationPropertyPaths, IncludeLoadTree includeLoadTree, Boolean shouldThrow)
   at Microsoft.EntityFrameworkCore.Query.Internal.IncludeCompiler.TryPopulateIncludeLoadTree(IncludeResultOperator includeResultOperator, IncludeLoadTree includeLoadTree, Boolean shouldThrow)
   at Microsoft.EntityFrameworkCore.Query.Internal.IncludeCompiler.CreateIncludeLoadTrees(QueryModel queryModel, Boolean shouldThrow)
   at Microsoft.EntityFrameworkCore.Query.Internal.IncludeCompiler.CompileIncludes(QueryModel queryModel, Boolean trackingQuery, Boolean asyncQuery, Boolean shouldThrow)
   at Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.OptimizeQueryModel(QueryModel queryModel, Boolean asyncQuery)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.OptimizeQueryModel(QueryModel queryModel, Boolean asyncQuery)
   at Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.CreateAsyncQueryExecutor[TResult](QueryModel queryModel)
   at Microsoft.EntityFrameworkCore.Storage.Database.CompileAsyncQuery[TResult](QueryModel queryModel)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileAsyncQueryCore[TResult](Expression query, IQueryModelGenerator queryModelGenerator, IDatabase database)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass22_0`1.<CompileAsyncQuery>b__0()
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQueryCore[TFunc](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddAsyncQuery[TResult](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileAsyncQuery[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteAsync[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.ExecuteAsync[TResult](Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.System.Collections.Generic.IAsyncEnumerable<TResult>.GetEnumerator()
   at System.Linq.AsyncEnumerable.Aggregate_[TSource,TAccumulate,TResult](IAsyncEnumerable`1 source, TAccumulate seed, Func`3 accumulator, Func`2 resultSelector, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Aggregate.cs:line 118
   at blog.Infrastructure.Repositories.PostRepository.GetAllPostAsync(PostParameters postParameters) in /Users/zhexuanzhou/Projects/blog_with_Identity/blog.Infrastructure/Repositories/PostRepository.cs:line 42
   at blog.Api.Controllers.PostController.Get(PostParameters postParameters, String mediaType) in /Users/zhexuanzhou/Projects/blog_with_Identity/blog.Api/Controllers/PostController.cs:line 30
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-12-26 13:20:53.908 +08:00 [INF] Request finished in 2484.5046ms 500 text/html; charset=utf-8
2018-12-26 13:20:53.920 +08:00 [INF] Connection id "0HLJAU7JDMPHK", Request id "0HLJAU7JDMPHK:00000001": the application completed without reading the entire request body.
2018-12-26 13:22:49.224 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:22:49.862 +08:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:22:49.932 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:22:49.938 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:22:49.943 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:22:50.006 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 13:22:50.648 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 13:22:50.780 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 13:22:50.826 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 13:22:51.051 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 13:22:51.435 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 13:22:51.449 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:22:51.464 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:22:51.467 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:22:51.536 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 13:22:51.554 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 13:22:51.864 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 13:22:52.010 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2018-12-26 13:22:52.093 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 649.0741ms.
2018-12-26 13:22:52.109 +08:00 [INF] Executing ObjectResult, writing value of type 'blog.Core.Entities.PaginatedList`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 13:22:52.165 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1110.9582ms
2018-12-26 13:22:52.178 +08:00 [INF] Request finished in 1530.6106ms 200 application/json; charset=utf-8
2018-12-26 13:22:52.194 +08:00 [INF] Connection id "0HLJAU8MUNOBQ", Request id "0HLJAU8MUNOBQ:00000001": the application completed without reading the entire request body.
2018-12-26 13:24:33.039 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:24:33.696 +08:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:24:33.790 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:24:33.798 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:24:33.806 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:24:33.903 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 13:24:34.938 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 13:24:35.084 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 13:24:35.133 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 13:24:35.355 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 13:24:35.898 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 13:24:35.912 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:24:35.965 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:24:35.968 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:24:36.032 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 13:24:36.051 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 13:24:36.298 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 13:24:36.477 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2018-12-26 13:24:36.556 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 649.7014ms.
2018-12-26 13:24:36.572 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 13:24:36.609 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1250.707ms
2018-12-26 13:24:36.618 +08:00 [INF] Request finished in 1681.1986ms 200 application/json; charset=utf-8
2018-12-26 13:24:36.630 +08:00 [INF] Connection id "0HLJAU9M12VD2", Request id "0HLJAU9M12VD2:00000001": the application completed without reading the entire request body.
2018-12-26 13:25:38.181 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:25:38.804 +08:00 [INF] Executed DbCommand (60ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:25:38.895 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:25:38.901 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:25:38.905 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:25:38.971 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 13:25:39.599 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 13:25:39.734 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 13:25:39.781 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 13:25:39.991 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 13:25:40.414 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 13:25:40.431 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:25:40.448 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:25:40.451 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:25:40.533 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 13:25:40.551 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 13:25:40.827 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 13:25:40.973 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2018-12-26 13:25:41.862 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1867.4618ms
2018-12-26 13:25:41.870 +08:00 [ERR] An unhandled exception has occurred while executing the request.
AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
IEnumerable`1 -> IEnumerable`1
System.Collections.Generic.IEnumerable`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> System.Collections.Generic.IEnumerable`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] ---> AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Type Map configuration:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Destination Member:
Tags
 ---> AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
PostTag -> PostTagViewModel
blog.Core.Entities.PostTag -> blog.Infrastructure.ViewModels.PostTagViewModel

Type Map configuration:
PostTag -> PostTagViewModel
blog.Core.Entities.PostTag -> blog.Infrastructure.ViewModels.PostTagViewModel

Destination Member:
TagName
 ---> System.TypeLoadException: Method 'GetEnumerator' in type 'Proxy_System.Collections.Generic.IEnumerable`1[[blog.Infrastructure.ViewModels.TagViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]_58398529_' from assembly 'AutoMapper.Proxies, Version=0.0.0.0, Culture=neutral, PublicKeyToken=be96cd2c38ef1005' does not have an implementation.
   at System.Reflection.Emit.TypeBuilder.TermCreateClass(RuntimeModule module, Int32 tk, ObjectHandleOnStack type)
   at System.Reflection.Emit.TypeBuilder.CreateTypeNoLock()
   at System.Reflection.Emit.TypeBuilder.CreateTypeInfo()
   at AutoMapper.Execution.ProxyGenerator.EmitProxy(TypeDescription typeDescription) in C:\projects\automapper\src\AutoMapper\Execution\ProxyGenerator.cs:line 123
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)
   at System.Lazy`1.CreateValue()
   at AutoMapper.Execution.ProxyGenerator.GetProxyType(Type interfaceType) in C:\projects\automapper\src\AutoMapper\Execution\ProxyGenerator.cs:line 147
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   at AutoMapper.Mapper.AutoMapper.IMapper.Map[TSource,TDestination](TSource source) in C:\projects\automapper\src\AutoMapper\Mapper.cs:line 233
   at blog.Api.Controllers.PostController.Get(PostParameters postParameters, String mediaType) in /Users/zhexuanzhou/Projects/blog_with_Identity/blog.Api/Controllers/PostController.cs:line 31
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-12-26 13:25:41.960 +08:00 [INF] Request finished in 2361.6985ms 500 text/html; charset=utf-8
2018-12-26 13:25:41.978 +08:00 [INF] Connection id "0HLJAUA9A7INM", Request id "0HLJAUA9A7INM:00000001": the application completed without reading the entire request body.
2018-12-26 13:26:06.720 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:26:07.680 +08:00 [INF] Executed DbCommand (122ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:26:07.824 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:26:07.830 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:26:07.837 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:26:07.909 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 13:26:08.878 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 13:26:09.018 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 13:26:09.079 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 13:26:09.291 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 13:26:09.721 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 13:26:09.736 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:26:09.751 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:26:09.754 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:26:09.822 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 13:26:09.841 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 13:26:10.083 +08:00 [INF] Executed DbCommand (30ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 13:26:10.242 +08:00 [INF] Executed DbCommand (17ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2018-12-26 13:26:11.125 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1830.2387ms
2018-12-26 13:26:11.132 +08:00 [ERR] An unhandled exception has occurred while executing the request.
AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
IEnumerable`1 -> IEnumerable`1
System.Collections.Generic.IEnumerable`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> System.Collections.Generic.IEnumerable`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] ---> AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Type Map configuration:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Destination Member:
Tags
 ---> AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
PostTag -> PostTagViewModel
blog.Core.Entities.PostTag -> blog.Infrastructure.ViewModels.PostTagViewModel

Type Map configuration:
PostTag -> PostTagViewModel
blog.Core.Entities.PostTag -> blog.Infrastructure.ViewModels.PostTagViewModel

Destination Member:
TagName
 ---> System.TypeLoadException: Method 'GetEnumerator' in type 'Proxy_System.Collections.Generic.IEnumerable`1[[blog.Infrastructure.ViewModels.TagViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]_29431898_' from assembly 'AutoMapper.Proxies, Version=0.0.0.0, Culture=neutral, PublicKeyToken=be96cd2c38ef1005' does not have an implementation.
   at System.Reflection.Emit.TypeBuilder.TermCreateClass(RuntimeModule module, Int32 tk, ObjectHandleOnStack type)
   at System.Reflection.Emit.TypeBuilder.CreateTypeNoLock()
   at System.Reflection.Emit.TypeBuilder.CreateTypeInfo()
   at AutoMapper.Execution.ProxyGenerator.EmitProxy(TypeDescription typeDescription) in C:\projects\automapper\src\AutoMapper\Execution\ProxyGenerator.cs:line 123
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)
   at System.Lazy`1.CreateValue()
   at AutoMapper.Execution.ProxyGenerator.GetProxyType(Type interfaceType) in C:\projects\automapper\src\AutoMapper\Execution\ProxyGenerator.cs:line 147
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   at AutoMapper.Mapper.AutoMapper.IMapper.Map[TSource,TDestination](TSource source) in C:\projects\automapper\src\AutoMapper\Mapper.cs:line 233
   at blog.Api.Controllers.PostController.Get(PostParameters postParameters, String mediaType) in /Users/zhexuanzhou/Projects/blog_with_Identity/blog.Api/Controllers/PostController.cs:line 31
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-12-26 13:26:11.219 +08:00 [INF] Request finished in 2341.8128ms 500 text/html; charset=utf-8
2018-12-26 13:26:11.231 +08:00 [INF] Connection id "0HLJAUAI113VU", Request id "0HLJAUAI113VU:00000001": the application completed without reading the entire request body.
2018-12-26 13:26:48.162 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:26:48.787 +08:00 [INF] Executed DbCommand (69ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:26:48.873 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:26:48.881 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:26:48.886 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:26:48.961 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 13:26:49.769 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 13:26:49.904 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 13:26:49.953 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 13:26:50.211 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 13:26:50.593 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 13:26:50.607 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:26:50.622 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:26:50.624 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:26:50.690 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 13:26:50.708 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 13:26:50.985 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 13:26:51.139 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2018-12-26 13:26:51.966 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1751.9116000000001ms
2018-12-26 13:26:51.971 +08:00 [ERR] An unhandled exception has occurred while executing the request.
AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
IEnumerable`1 -> IEnumerable`1
System.Collections.Generic.IEnumerable`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> System.Collections.Generic.IEnumerable`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] ---> AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Type Map configuration:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Destination Member:
Tags
 ---> AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
PostTag -> PostTagViewModel
blog.Core.Entities.PostTag -> blog.Infrastructure.ViewModels.PostTagViewModel

Type Map configuration:
PostTag -> PostTagViewModel
blog.Core.Entities.PostTag -> blog.Infrastructure.ViewModels.PostTagViewModel

Destination Member:
TagName
 ---> AutoMapper.AutoMapperConfigurationException: 
Unmapped members were found. Review the types and members below.
Add a custom mapping expression, ignore, add a custom resolver, or modify the source/destination type
For no matching constructor, add a no-arg ctor, add optional arguments, or map all of the constructor parameters
===========================================================
AutoMapper created this type map for you, but your types cannot be mapped using the current configuration.
Char -> TagViewModel (Destination member list)
System.Char -> blog.Infrastructure.ViewModels.TagViewModel (Destination member list)

Unmapped properties:
Id
TagName

   at AutoMapper.ConfigurationValidator.AssertConfigurationIsValid(IEnumerable`1 typeMaps) in C:\projects\automapper\src\AutoMapper\ConfigurationValidator.cs:line 48
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   at AutoMapper.Mapper.AutoMapper.IMapper.Map[TSource,TDestination](TSource source) in C:\projects\automapper\src\AutoMapper\Mapper.cs:line 233
   at blog.Api.Controllers.PostController.Get(PostParameters postParameters, String mediaType) in /Users/zhexuanzhou/Projects/blog_with_Identity/blog.Api/Controllers/PostController.cs:line 31
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-12-26 13:26:52.061 +08:00 [INF] Request finished in 2292.399ms 500 text/html; charset=utf-8
2018-12-26 13:26:52.073 +08:00 [INF] Connection id "0HLJAUAU6QJUE", Request id "0HLJAUAU6QJUE:00000001": the application completed without reading the entire request body.
2018-12-26 13:27:53.135 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:27:53.743 +08:00 [INF] Executed DbCommand (57ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:27:53.848 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:27:53.855 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:27:53.865 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:27:53.934 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 13:27:54.669 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 13:27:54.808 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 13:27:54.856 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 13:27:55.077 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 13:27:55.462 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 13:27:55.476 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:27:55.491 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:27:55.494 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:27:55.558 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 13:27:55.577 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 13:27:55.874 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 13:27:56.019 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2018-12-26 13:27:56.775 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1694.0741ms
2018-12-26 13:27:56.780 +08:00 [ERR] An unhandled exception has occurred while executing the request.
AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
IEnumerable`1 -> IEnumerable`1
System.Collections.Generic.IEnumerable`1[[blog.Core.Entities.Post, blog.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> System.Collections.Generic.IEnumerable`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] ---> AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Type Map configuration:
Post -> PostViewModel
blog.Core.Entities.Post -> blog.Infrastructure.ViewModels.PostViewModel

Destination Member:
Tags
 ---> AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
PostTag -> PostTagViewModel
blog.Core.Entities.PostTag -> blog.Infrastructure.ViewModels.PostTagViewModel

Type Map configuration:
PostTag -> PostTagViewModel
blog.Core.Entities.PostTag -> blog.Infrastructure.ViewModels.PostTagViewModel

Destination Member:
TagName
 ---> AutoMapper.AutoMapperConfigurationException: 
Unmapped members were found. Review the types and members below.
Add a custom mapping expression, ignore, add a custom resolver, or modify the source/destination type
For no matching constructor, add a no-arg ctor, add optional arguments, or map all of the constructor parameters
===========================================================
AutoMapper created this type map for you, but your types cannot be mapped using the current configuration.
Char -> TagViewModel (Destination member list)
System.Char -> blog.Infrastructure.ViewModels.TagViewModel (Destination member list)

Unmapped properties:
Id
TagName

   at AutoMapper.ConfigurationValidator.AssertConfigurationIsValid(IEnumerable`1 typeMaps) in C:\projects\automapper\src\AutoMapper\ConfigurationValidator.cs:line 48
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , IEnumerable`1 , IEnumerable`1 , ResolutionContext )
   at AutoMapper.Mapper.AutoMapper.IMapper.Map[TSource,TDestination](TSource source) in C:\projects\automapper\src\AutoMapper\Mapper.cs:line 233
   at blog.Api.Controllers.PostController.Get(PostParameters postParameters, String mediaType) in /Users/zhexuanzhou/Projects/blog_with_Identity/blog.Api/Controllers/PostController.cs:line 31
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-12-26 13:27:56.871 +08:00 [INF] Request finished in 2202.0716ms 500 text/html; charset=utf-8
2018-12-26 13:27:56.882 +08:00 [INF] Connection id "0HLJAUBHICGT0", Request id "0HLJAUBHICGT0:00000001": the application completed without reading the entire request body.
2018-12-26 13:29:04.389 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:29:05.037 +08:00 [INF] Executed DbCommand (70ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:29:05.133 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:29:05.139 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:29:05.144 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:29:05.207 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 13:29:06.049 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 13:29:06.184 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 13:29:06.231 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 13:29:06.443 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 13:29:06.820 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 13:29:06.834 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:29:06.849 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:29:06.851 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:29:06.917 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 13:29:06.935 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 13:29:07.224 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 13:29:07.364 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2018-12-26 13:29:07.447 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 618.0789ms.
2018-12-26 13:29:07.464 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 13:29:07.505 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1059.5234ms
2018-12-26 13:29:07.515 +08:00 [INF] Request finished in 1467.2571ms 200 application/json; charset=utf-8
2018-12-26 13:29:07.528 +08:00 [INF] Connection id "0HLJAUC6QJN88", Request id "0HLJAUC6QJN88:00000001": the application completed without reading the entire request body.
2018-12-26 13:29:44.316 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:29:45.097 +08:00 [INF] Executed DbCommand (68ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:29:45.180 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:29:45.190 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:29:45.231 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:29:45.312 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 13:29:46.566 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 13:29:46.697 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 13:29:46.743 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 13:29:46.958 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 13:29:47.334 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 13:29:47.347 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:29:47.362 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:29:47.364 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:29:47.428 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 13:29:47.447 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 13:29:47.714 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 13:29:47.869 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2018-12-26 13:29:47.975 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 632.7322ms.
2018-12-26 13:29:47.992 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 13:29:48.027 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1065.9074ms
2018-12-26 13:29:48.037 +08:00 [INF] Request finished in 1471.7266ms 200 application/json; charset=utf-8
2018-12-26 13:29:48.049 +08:00 [INF] Connection id "0HLJAUCIT4RB4", Request id "0HLJAUCIT4RB4:00000001": the application completed without reading the entire request body.
2018-12-26 13:30:08.181 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:30:08.718 +08:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:30:08.789 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:30:08.794 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:30:08.799 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:30:08.861 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 13:30:13.390 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 13:30:13.527 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 13:30:13.576 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 13:30:13.827 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 13:30:14.204 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 13:30:14.218 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:30:14.232 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:30:14.234 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:30:14.303 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 13:30:14.322 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 13:30:14.606 +08:00 [INF] Executed DbCommand (32ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 13:30:14.778 +08:00 [INF] Executed DbCommand (15ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2018-12-26 13:30:14.923 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 710.60700000000008ms.
2018-12-26 13:30:14.938 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 13:30:14.976 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1145.2349000000002ms
2018-12-26 13:30:14.986 +08:00 [INF] Request finished in 1597.1134ms 200 application/json; charset=utf-8
2018-12-26 13:30:14.999 +08:00 [INF] Connection id "0HLJAUCQT794A", Request id "0HLJAUCQT794A:00000001": the application completed without reading the entire request body.
2018-12-26 13:32:11.194 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:32:11.779 +08:00 [INF] Executed DbCommand (58ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:32:11.857 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:32:11.863 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:32:11.867 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 13:32:11.928 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 13:32:17.751 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 13:32:17.892 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 13:32:17.943 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 13:32:18.155 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 13:32:18.518 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 13:32:18.531 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 13:32:18.585 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:32:18.588 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 13:32:18.651 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 13:32:18.669 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 13:32:18.964 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 13:32:19.105 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2018-12-26 13:32:19.185 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 658.7956ms.
2018-12-26 13:32:19.201 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 13:32:19.238 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1079.6853ms
2018-12-26 13:32:19.248 +08:00 [INF] Request finished in 1497.4158ms 200 application/json; charset=utf-8
2018-12-26 13:32:19.261 +08:00 [INF] Connection id "0HLJAUDVVB20I", Request id "0HLJAUDVVB20I:00000001": the application completed without reading the entire request body.
2018-12-26 21:18:21.915 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 21:18:22.557 +08:00 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Posts` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 21:18:22.644 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Tags` AS `t`)
    THEN TRUE ELSE FALSE
END
2018-12-26 21:18:22.651 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `PostTags` AS `p`)
    THEN TRUE ELSE FALSE
END
2018-12-26 21:18:22.657 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM `Comments` AS `c`)
    THEN TRUE ELSE FALSE
END
2018-12-26 21:18:22.737 +08:00 [INF] User profile is available. Using '/Users/zhexuanzhou/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2018-12-26 21:18:23.701 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/post application/json 58
2018-12-26 21:18:23.845 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2018-12-26 21:18:23.900 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
2018-12-26 21:18:24.172 +08:00 [INF] Route matched with {action = "Get", controller = "Post"}. Executing action blog.Api.Controllers.PostController.Get (blog.Api)
2018-12-26 21:18:24.557 +08:00 [INF] Executing action method blog.Api.Controllers.PostController.Get (blog.Api) with arguments (["blog.Core.Entities.PostParameters","*/*"]) - Validation state: "Valid"
2018-12-26 21:18:24.571 +08:00 [INF] Entity Framework Core 2.2.0-rtm-35687 initialized 'RepositoryDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None
2018-12-26 21:18:24.588 +08:00 [WRN] The Include operation for navigation '[p].PostTags.Tag' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 21:18:24.590 +08:00 [WRN] The Include operation for navigation '[p].Author.User' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2018-12-26 21:18:24.658 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Posts` AS `p`
2018-12-26 21:18:24.679 +08:00 [WRN] Query: '(from Post p in DbSet<Post> select [p]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2018-12-26 21:18:24.957 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`Id`, `p`.`AuthorId`, `p`.`Body`, `p`.`CreateTime`, `p`.`LastModify`, `p`.`Title`, `p.Author`.`Id`, `p.Author`.`Gender`, `p.Author`.`UserId`, `t`.`Id`, `t`.`AccessFailedCount`, `t`.`ConcurrencyStamp`, `t`.`Discriminator`, `t`.`Email`, `t`.`EmailConfirmed`, `t`.`LockoutEnabled`, `t`.`LockoutEnd`, `t`.`NormalizedEmail`, `t`.`NormalizedUserName`, `t`.`PasswordHash`, `t`.`PhoneNumber`, `t`.`PhoneNumberConfirmed`, `t`.`SecurityStamp`, `t`.`TwoFactorEnabled`, `t`.`UserName`, `t`.`FirstName`, `t`.`LastName`
FROM `Posts` AS `p`
INNER JOIN `Authors` AS `p.Author` ON `p`.`AuthorId` = `p.Author`.`Id`
LEFT JOIN (
    SELECT `p.Author.User`.*
    FROM `AspNetUsers` AS `p.Author.User`
    WHERE `p.Author.User`.`Discriminator` = 'User'
) AS `t` ON `p.Author`.`UserId` = `t`.`Id`
ORDER BY `p`.`Id`
LIMIT @__p_1 OFFSET @__p_0
2018-12-26 21:18:25.109 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `p.PostTags`.`PostId`, `p.PostTags`.`TagId`, `p.PostTags`.`Id`, `p.Tag`.`Id`, `p.Tag`.`TagName`
FROM `PostTags` AS `p.PostTags`
INNER JOIN `Tags` AS `p.Tag` ON `p.PostTags`.`TagId` = `p.Tag`.`Id`
INNER JOIN (
    SELECT DISTINCT `t1`.*
    FROM (
        SELECT `p0`.`Id`
        FROM `Posts` AS `p0`
        INNER JOIN `Authors` AS `p.Author0` ON `p0`.`AuthorId` = `p.Author0`.`Id`
        LEFT JOIN (
            SELECT `p.Author.User0`.*
            FROM `AspNetUsers` AS `p.Author.User0`
            WHERE `p.Author.User0`.`Discriminator` = 'User'
        ) AS `t0` ON `p.Author0`.`UserId` = `t0`.`Id`
        ORDER BY `p0`.`Id`
        LIMIT @__p_1 OFFSET @__p_0
    ) AS `t1`
) AS `t2` ON `p.PostTags`.`PostId` = `t2`.`Id`
ORDER BY `t2`.`Id`
2018-12-26 21:18:25.236 +08:00 [INF] Executed action method blog.Api.Controllers.PostController.Get (blog.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 670.2358ms.
2018-12-26 21:18:25.251 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[blog.Infrastructure.ViewModels.PostViewModel, blog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2018-12-26 21:18:25.289 +08:00 [INF] Executed action blog.Api.Controllers.PostController.Get (blog.Api) in 1113.3526000000002ms
2018-12-26 21:18:25.300 +08:00 [INF] Request finished in 1599.7281ms 200 application/json; charset=utf-8
2018-12-26 21:18:25.314 +08:00 [INF] Connection id "0HLJB6IEEMEBC", Request id "0HLJB6IEEMEBC:00000001": the application completed without reading the entire request body.
